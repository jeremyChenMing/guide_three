{"version":3,"sources":["pages/FloorTwo/FloorTwo.js","pages/FloorTwo/floor-two-path.js","static/icon/icons.js","utils/threeUtils.js","utils/formateDatetime.js","component/dateBox/DateBox.js"],"names":["prevMesh","currentMesh","pathArray","pathPoint0","x","y","pathPoint1","pathPoint2","pathPoint3","pathPoint4","pathPoint5","pathPoint6","pathPoint7","pathPoint8","pathPoint9","pathPoint10","pathPoint11","pathPoint12","pathPoint13","navList","name","number","cubeArray","pathIndex","isNav","title","FloorTwo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","init","_assertThisInitialize","assertThisInitialized","scene","camera","renderer","createFloor","initGeometryBoxOne","initGeometryBoxTwo","initGeometryBoxThree","initGeometryBoxFour","addClickEvent","render","boxA1","getGeometryBox","position","set","boxA3","boxA4","createSector","boxA5","boxA6","boxA7","boxA8","boxA9","boxA10","liftGroup","Group","add","group","rotation","Math","PI","boxB1","boxB2","boxB3","boxA2","boxC1","createCylinder","boxC2","boxC3","boxC4","boxC5","boxC6","boxC7","boxC8","toiletGroup","boxD1","boxD2","boxD3","boxD4","boxD5","createSectorInD","boxD6","createIrregularCube","boxD7","initPerson","_assertThisInitialize6","personCurrentXY","state","person","createPerson","shapeCircle","Shape","Vector2","absarc","shapeMin","geometryCircle","ShapeGeometry","materialCircle","MeshBasicMaterial","color","materialCircleMin","polygonOffset","polygonOffsetFactor","meshCircle","Mesh","initControl","_assertThisInitialize7","requestAnimationFrame","initPersonXY","positionObj","match","params","setState","shape","moveTo","lineTo","v1","Vector3","v2","extrudeSettings","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","LineCurve3","geometry","ExtrudeGeometry","material","MeshPhongMaterial","mesh","fontBox","arr","forEach","item","transparent","opacity","radiusTop","radiusBottom","height","CylinderGeometry","replace","castShadow","receiveShadow","quadraticCurveTo","geometry2","mesh2","MeshLambertMaterial","scale","points","LatheGeometry","lathe","geometrySphere","SphereGeometry","materialSphere","sphere","groupPerson","animationDown","_assertThisInitialize9","that","yHeight","move","animationDownId","animationUp","_assertThisInitialize10","animationUpId","currentCurve","animatePerson","_assertThisInitialize11","currentPerson","getObjectByName","remove","currentLine","autoClear","getPoints","BufferGeometry","setFromPoints","LineDashedMaterial","dashSize","gapSize","linewidth","line","Line","computeLineDistances","progress","animate","getLength","point","getPointAt","animationPersonId","getPath","index","pathPoint","meshName","currentPositionPaths","curve","Path","getCurrentPositionPaths","cube","on","ev","changeNav","cursor","currentNav","currentFastNav","isShowTips","changeFastNav","num","routerNav","floorName","location","search","split","clearAnimationFrame","history","push","concat","path","cancelAnimationFrame","Scene","OrthographicCamera","up","lookAt","Window","WebGLRenderer","antialias","preserveDrawingBuffer","alpha","setPixelRatio","window","devicePixelRatio","setSize","shadowMap","enabled","interaction","Interaction","AmbientLight","light","DirectionalLight","currentIndex","three","appendChild","domElement","removeEvents","_this2","_this$state","_react_16_12_0_react_default","a","createElement","className","style","textAlign","ref","el","map","key","onClick","icons","DateBox","floor","Component","LiftSvg","react__WEBPACK_IMPORTED_MODULE_2___default","t","viewBox","version","xmlns","p-id","width","d","fill","ToiletSvg","NurserySvg","LiftIcon","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","assign","component","ToiletIcon","NurseryIcon","__webpack_require__","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","depth","canvasText","fontSize","fontColor","canvasRotationDirection","BoxGeometry","canvas","text","rotateDirection","document","ctx","getContext","translate","fillStyle","fillRect","font","textBaseline","angel","rotate","fillText","getTextCanvas","texture","CanvasTexture","minFilter","LinearFilter","polygonOffsetUnits","materialColor","materialArr","FormatDateTime","timeStamp","type","date","Date","setTime","getFullYear","m","getMonth","getDate","h","getHours","minute","getMinutes","second","getSeconds","result","week","getDay","dateTime","now","timer","setInterval","clearInterval"],"mappings":"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","file":"static/js/6.d32fd9bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  AmbientLight,\n  // AxesHelper,\n  // BoxGeometry,\n  BufferGeometry,\n  // CanvasTexture, \n  CylinderGeometry,\n  DirectionalLight,\n  ExtrudeGeometry,\n  // GridHelper,\n  Group,\n  LatheGeometry,\n  Line,\n  LineCurve3,\n  LineDashedMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  OrthographicCamera,\n  Path,\n  Scene,\n  Shape,\n  ShapeGeometry,\n  SphereGeometry,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport { Interaction } from \"three.interaction\";\nimport \"./FloorTwo.less\";\n\nimport { LiftIcon, ToiletIcon } from \"../../static/icon/icons\"; // NurseryIcon\nimport pathArray from \"./floor-two-path\";\nimport { getGeometryBox } from '../../utils/threeUtils';\nimport DateBox from \"../../component/dateBox/DateBox\";\n\nconst navList = [\n  {\n    name: '税务窗口 ➀',\n    number: 0\n  },\n  {\n    name: '税务窗口 ➁',\n    number: 1\n  },\n  {\n    name: '税务窗口 ➂',\n    number: 2\n  },\n  {\n    name: '社保窗口 ➀',\n    number: 3\n  },\n  {\n    name: '社保窗口 ➁',\n    number: 4\n  },\n  {\n    name: '预审区',\n    number: 5\n  },\n  {\n    name: '信访接待室',\n    number: 6\n  },\n  {\n    name: '政务值班室',\n    number: 7\n  },\n  {\n    name: '大宗客户室',\n    number: 8\n  },\n  {\n    name: '洽谈室',\n    number: 9\n  }\n];\nlet cubeArray = [\n  {\n    name: 'meshC3',\n    pathIndex: 0,\n    isNav: true,\n    title: '税务窗口 ➀'\n  },\n  {\n    name: 'meshC6',\n    pathIndex: 1,\n    isNav: true,\n    title: '税务窗口 ➁'\n  },\n  {\n    name: 'meshB2',\n    pathIndex: 2,\n    isNav: true,\n    title: '税务窗口 ➂'\n  },\n  {\n    name: 'meshA7',\n    pathIndex: 3,\n    isNav: true,\n    title: '社保窗口 ➀'\n  },\n  {\n    name: 'meshD2',\n    pathIndex: 4,\n    isNav: true,\n    title: '社保窗口 ➁'\n  },\n  {\n    name: 'meshC1',\n    pathIndex: 5,\n    isNav: true,\n    title: '预审区'\n  },\n  {\n    name: 'meshD4',\n    pathIndex: 6,\n    isNav: true,\n    title: '信访接待室'\n  },\n  {\n    name: 'groupD5',\n    pathIndex: 7,\n    isNav: true,\n    title: '政务值班室'\n  },\n  {\n    name: 'groupA4',\n    pathIndex: 8,\n    isNav: true,\n    title: '大宗客户室'\n  },\n  {\n    name: 'meshA5',\n    pathIndex: 9,\n    isNav: true,\n    title: '洽谈室'\n  },\n  {\n    name: 'meshA9',\n    pathIndex: 14,\n    isNav: false,\n    title: ''\n  },\n  {\n    name: 'meshA2',\n    pathIndex: 15,\n    isNav: false,\n    title: ''\n  },\n  {\n    name: 'meshA1',\n    pathIndex: 12,\n    isNav: false,\n    title: ''\n  },\n  {\n    name: 'meshC4',\n    pathIndex: 13,\n    isNav: false,\n    title: ''\n  },\n\n];\nlet prevMesh;\nlet currentMesh;\nclass FloorTwo extends Component {\n  constructor(props) {\n    super(props);\n    this.scene = new Scene();\n    // this.scene.background = new Color('rgb(0,140,0)');\n    // this.scene.fog = new Fog(0xa0a0a0, 200, 1000);\n    // this.camera = new PerspectiveCamera(45, 1.75, 1, 2000);\n    this.camera = new OrthographicCamera(-700, 700, 400, -400, 1, 2000);\n    this.camera.position.set(0, 400, 500);\n    this.camera.up.set(0, 1, 0);\n    this.camera.lookAt(0, 0, 0);\n    this.renderer = Window.renderer = Window.renderer ?\n      Window.renderer\n      :\n      new WebGLRenderer({\n        antialias: true,\n        preserveDrawingBuffer: true,\n        alpha: true\n      });\n    // this.renderer.setClearAlpha(0);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.autoClear = true;\n    this.renderer.setSize(1500, 900);\n    // 允许阴影投射\n    this.renderer.shadowMap.enabled = true;\n    //第三方库给对象添加事件\n    this.interaction = new Interaction(this.renderer, this.scene, this.camera);\n\n    //坐标轴辅助\n    // let axes = new AxesHelper(400);\n    // this.scene.add(axes);\n\n    this.scene.add(new AmbientLight(0x555555));\n\n    this.light = new DirectionalLight(0xffffff, 1);\n    this.light.position.set(0, 700, 500);\n    this.light.castShadow = true;\n    //告诉平行光需要开启阴影投射\n    this.light.castShadow = true;\n\n    // this.light1 = new PointLight(0xffffff);\n    // this.light1.position.set(0, 600, 600);\n    // this.scene.add(this.light1);\n    // this.light.shadow.camera.top = 180;\n    // this.light.shadow.camera.bottom = -100;\n    // this.light.shadow.camera.left = -120;\n    // this.light.shadow.camera.right = 120;\n\n\n\n    this.scene.add(this.light);\n\n    /*this.pointLight = new PointLight(0xffffff);\n    this.pointLight.position.set(-70, 300, 600);\n    this.pointLight.shadow.mapSize.width = 5120; // 必须是 2的幂，默认值为 512\n    this.pointLight.shadow.mapSize.height = 5120; // 必须是 2的幂，默认值为 512\n    this.pointLight.castShadow = true;\n    this.scene.add(this.pointLight);*/\n\n    // this.renderer.setClearColor(0xFFFFFF, 1.0);\n\n    /*this.light = new PointLight(0xffffff);\n    this.light.position.set(0, 0, 300);\n    this.scene.add(this.light);*/\n    //网格\n    // this.helper = new GridHelper(1500, 150, 0xff0000, 0x00ff00);\n    // this.scene.add(this.helper);\n\n    // this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.state = {\n      currentIndex: 1,\n      currentNav: null,\n      currentFastNav: null,\n      title: '前台',\n      currentCurve: null,\n      personCurrentXY: { x: 0, y: 0 },\n      currentPositionPaths: [],\n      isShowTips: false\n    };\n  }\n  init = () => {\n    let { scene, camera, renderer } = this;\n    this.createFloor();\n    this.initGeometryBoxOne();\n    this.initGeometryBoxTwo();\n    this.initGeometryBoxThree();\n    this.initGeometryBoxFour();\n    this.addClickEvent();\n    // this.initControl();\n    renderer.render(scene, camera);\n  };\n  initGeometryBoxOne = () => {\n    let { scene } = this;\n    let boxA1 = getGeometryBox(\n      60,\n      80,\n      80,\n      '0x577ED8',\n      'meshA1',\n      '电梯',\n      '',\n      '',\n      \"#fff\",\n      'normal'\n    );\n    boxA1.position.set(-440, -20, -310);\n\n\n    let boxA3 = getGeometryBox(\n      80,\n      80,\n      40,\n      '0x9D9D9D',\n      'meshA3',\n      ''\n    );\n    boxA3.position.set(-440, -20, -170);\n\n    let boxA4 = this.createSector();\n    boxA4.position.set(-430, 0, -120);\n\n    let boxA5 = getGeometryBox(\n      60,\n      80,\n      50,\n      '0xF4C23C',\n      'meshA5',\n      '洽谈室'\n    );\n    boxA5.position.set(-390, -20, -95);\n    let boxA6 = getGeometryBox(\n      570,\n      80,\n      50,\n      '0x9D9D9D',\n      'meshA6',\n      ''\n    );\n    boxA6.position.set(-50, -20, -95);\n    let boxA7 = getGeometryBox(\n      300,\n      80,\n      80,\n      '0x83C6ED',\n      'meshA7',\n      '社保窗口 ➀',\n      '',\n      '25px'\n    );\n    boxA7.position.set(-230, -20, -190);\n    let boxA8 = getGeometryBox(\n      80,\n      80,\n      80,\n      '0x9D9D9D',\n      'meshA8',\n      '',\n      '',\n      '25px'\n    );\n    boxA8.position.set(-20, -20, -190);\n    let boxA9 = getGeometryBox(\n      60,\n      80,\n      80,\n      '0x577ED8',\n      'meshA9',\n      '电梯',\n      1,\n      '20px',\n      '#fff',\n      'normal'\n    );\n    boxA9.position.set(70, -20, -190);\n\n    let boxA10 = getGeometryBox(\n      40,\n      80,\n      80,\n      '0x9D9D9D',\n      'meshA10',\n      '',\n      '',\n      '',\n      '',\n      'normal'\n    );\n    boxA10.position.set(140, -20, -190);\n    let liftGroup = new Group();\n    liftGroup.name = 'liftGroup';\n    liftGroup.add(boxA1, boxA9);\n    let group = new Group();\n    group.add(boxA3, boxA4, boxA5, boxA6, boxA7, boxA8, boxA10, liftGroup);\n    group.rotation.set(0, -Math.PI / 180 * 45, 0);\n    group.position.set(-360, 0, 210);\n    scene.add(group);\n  };\n  initGeometryBoxTwo = () => {\n    let { scene } = this;\n    let boxB1 = getGeometryBox(\n      420,\n      80,\n      50,\n      '0x9D9D9D',\n      'meshB1',\n      ''\n    );\n    boxB1.position.set(-10, -20, 0);\n\n    let boxB2 = getGeometryBox(\n      300,\n      80,\n      70,\n      '0xDC7B60',\n      'meshB2',\n      '税务窗口 ➂'\n    );\n    boxB2.position.set(-70, -20, -100);\n    let boxB3 = getGeometryBox(\n      160,\n      80,\n      40,\n      '0xE6B3ED',\n      'meshB3',\n      '扶梯',\n      '',\n      ''\n    );\n    boxB3.position.set(-80, -20, -210);\n\n    let group = new Group();\n    group.add(boxB1, boxB2, boxB3);\n    group.position.set(140, 0, 315);\n    scene.add(group);\n  };\n  initGeometryBoxThree = () => {\n    let { scene } = this;\n    let boxA2 = getGeometryBox(\n      80,\n      80,\n      60,\n      '0xB992E9',\n      'meshA2',\n      '洗手间'\n    );\n    boxA2.position.set(-300, -20, -1012);\n    boxA2.rotation.set(0, -Math.PI / 2, 0);\n    let boxC1 = this.createCylinder(\n      30,\n      30,\n      80,\n      '0xEDC35C',\n      '',\n      'meshC1'\n    );\n    boxC1.position.set(-30, -20, -220);\n    let boxC2 = getGeometryBox(\n      120,\n      80,\n      80,\n      '0x9D9D9D',\n      'meshC2',\n      ''\n    );\n    boxC2.position.set(0, -20, -120);\n    let boxC3 = getGeometryBox(\n      120,\n      80,\n      120,\n      '0xDC7B60',\n      'meshC3',\n      '税务窗口 ➀'\n    );\n    boxC3.position.set(0, -20, 0);\n    let boxC4 = getGeometryBox(\n      100,\n      80,\n      80,\n      '0xC28DEF',\n      'meshC4',\n      '洗手间'\n    );\n    boxC4.position.set(150, -20, 0);\n\n    let boxC5 = getGeometryBox(\n      100,\n      80,\n      200,\n      '0x9D9D9D',\n      'meshC5',\n      '',\n      '',\n      '27px'\n    );\n    boxC5.position.set(150, -20, -150);\n    let boxC6 = getGeometryBox(\n      100,\n      80,\n      280,\n      '0xDC7B60',\n      'meshC6',\n      '税务窗口 ➁'\n    );\n    boxC6.position.set(150, -20, -420);\n    let boxC7 = getGeometryBox(\n      50,\n      80,\n      80,\n      '0x9D9D9D',\n      'meshC7',\n      ''\n    );\n    boxC7.position.set(30, -20, -220);\n\n    let boxC8 = getGeometryBox(\n      140,\n      80,\n      180,\n      '0x9D9D9D',\n      'meshC8',\n      ''\n    );\n    boxC8.position.set(0, -20, -380);\n    let toiletGroup = new Group();\n    toiletGroup.add(boxA2, boxC4);\n    toiletGroup.name = 'toiletGroup';\n    let group = new Group();\n    group.add(boxC1, boxC2, boxC3, boxC5, boxC6, boxC7, boxC8, toiletGroup);\n    group.rotation.set(0, Math.PI / 180 * 45, 0);\n    group.position.set(420, 0, 240);\n    scene.add(group);\n  };\n  initGeometryBoxFour = () => {\n    let { scene } = this;\n    let boxD1 = getGeometryBox(\n      100,\n      80,\n      100,\n      '0x9D9D9D',\n      'meshD1',\n      '',\n      1\n    );\n    boxD1.position.set(0, -20, 0);\n    let boxD2 = getGeometryBox(\n      200,\n      80,\n      40,\n      '0x83C6ED',\n      'meshD2',\n      '社保窗口 ➁'\n    );\n    boxD2.position.set(170, -20, 30);\n\n    let boxD3 = getGeometryBox(\n      200,\n      80,\n      40,\n      '0x9D9D9D',\n      'meshD3',\n      ''\n    );\n    boxD3.position.set(170, -20, -30);\n    let boxD4 = getGeometryBox(\n      50,\n      80,\n      100,\n      '0x8BDE83',\n      'meshD4',\n      '信访接待室'\n    );\n    boxD4.position.set(320, -20, 0);\n    let boxD5 = this.createSectorInD();\n    boxD5.position.set(370, 0, 50);\n    let IrregularCubeArr = [\n      { x: 0, y: -360 },\n      { x: -80, y: -440 },\n      { x: -180, y: -340 },\n      { x: -150, y: -310 },\n      { x: -150, y: -20 },\n      { x: -50, y: 80 },\n    ];\n    let boxD6 = this.createIrregularCube(IrregularCubeArr, 'meshD6', '#9D9D9D');\n    boxD6.position.set(10, 0, 80);\n    let boxD7 = getGeometryBox(\n      160,\n      80,\n      40,\n      '0xE6B3ED',\n      'meshD6',\n      '扶梯'\n    );\n    boxD7.position.set(170, -20, 270);\n    let group = new Group();\n    group.position.set(-320, 0, -310);\n    group.add(boxD1, boxD2, boxD3, boxD4, boxD5, boxD6, boxD7);\n    scene.add(group);\n  };\n  initPerson = () => {\n    let { scene, camera, renderer } = this;\n    let { personCurrentXY } = this.state;\n    let person = this.createPerson();\n    person.position.set(personCurrentXY.x, 0, personCurrentXY.y);\n    let shapeCircle = new Shape([new Vector2(0, 0)]);\n    shapeCircle.absarc(0, 0, 30, 0, Math.PI * 2, false);\n    let shapeMin = new Shape([new Vector2(0, 0)]);\n    shapeMin.absarc(0, 0, 15, 0, Math.PI * 2, false);\n    let geometryCircle = new ShapeGeometry([shapeCircle, shapeMin]);\n    let materialCircle = new MeshBasicMaterial({\n      color: 0xc1cadf\n    });\n    let materialCircleMin = new MeshBasicMaterial({\n      color: '#788fce',\n      polygonOffset: true,\n      polygonOffsetFactor: -1\n    });\n    let meshCircle = new Mesh(geometryCircle, [materialCircle, materialCircleMin]);\n    meshCircle.rotation.set(-Math.PI / 2, 0, 0);\n    meshCircle.position.set(personCurrentXY.x, 0, personCurrentXY.y);\n    scene.add(person, meshCircle);\n    renderer.render(scene, camera);\n  };\n  initControl = () => {\n    let { scene, camera, renderer } = this;\n    renderer.render(scene, camera);\n    requestAnimationFrame(this.initControl);\n  };\n  initPersonXY = () => {\n    let { match: { params: { position } } } = this.props;\n    let positionObj;\n    switch (position) {\n      case '0':\n        positionObj = {};\n        break;\n      case '1':\n        positionObj = { x: -150, y: 10 };\n        break;\n      default:\n        return;\n    }\n    this.setState({\n      personCurrentXY: positionObj\n    }, () => {\n      this.init();\n      if (positionObj) {\n        this.initPerson();\n      }\n    })\n  };\n  createSector = () => {\n    //左下角的扇形体\n    let shape = new Shape([new Vector2(0, 0)]);\n    shape.moveTo(50, -20);\n    shape.lineTo(50, 0);\n    shape.absarc(0, 0, 50, 0, Math.PI / 2, false);\n    shape.lineTo(0, -20);\n    let v1 = new Vector3(0, -60, 0);\n    let v2 = new Vector3(0, 20, 0);\n    let path = new LineCurve3(v1, v2);\n    let extrudeSettings = {\n      steps: 2,\n      // depth: 10,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1,\n      extrudePath: path\n    };\n    let geometry = new ExtrudeGeometry(shape, extrudeSettings);\n    let material = new MeshPhongMaterial({\n      color: 0x84B660,\n      polygonOffset: true,\n      polygonOffsetFactor: 0.01,\n      // emissive:color,\n      // transparent: true,\n      // opacity: 0.8,\n    });\n    let mesh = new Mesh(geometry, material);\n    mesh.name = 'meshA4';\n    mesh.rotation.set(0, Math.PI / 2, 0);\n    let fontBox = getGeometryBox(\n      30,\n      20,\n      50,\n      '0x84B660',\n      '',\n      '大宗客户室',\n      '',\n      '20px',\n      '',\n      'left'\n    );\n    fontBox.position.set(-20, 10, 8);\n    let group = new Group();\n    group.name = 'groupA4';\n    group.add(mesh, fontBox);\n    return group\n  };\n  createSectorInD = () => {\n    let shape = new Shape([new Vector2(0, 0)]);\n    shape.absarc(0, 0, 100, 0, Math.PI / 4, false);\n    shape.lineTo(0, 0);\n    let v1 = new Vector3(0, -60, 0);\n    let v2 = new Vector3(0, 20, 0);\n    let path = new LineCurve3(v1, v2);\n    let extrudeSettings = {\n      steps: 2,\n      // depth: 10,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1,\n      extrudePath: path\n    };\n    let geometry = new ExtrudeGeometry(shape, extrudeSettings);\n    let material = new MeshPhongMaterial({\n      color: 0xA98F68,\n      polygonOffset: true,\n      polygonOffsetFactor: 0.01,\n      // emissive:color,\n      // transparent: true,\n      // opacity: 0.8,\n    });\n    let mesh = new Mesh(geometry, material);\n    mesh.name = 'meshD5';\n    mesh.rotation.set(0, -Math.PI / 4, 0);\n    let fontBox = getGeometryBox(\n      60,\n      20,\n      20,\n      '0xA98F68',\n      '',\n      '政务值班室',\n      '',\n      '20px',\n      '',\n      'normal'\n    );\n    fontBox.position.set(25, 10, -60);\n    fontBox.rotation.set(0, Math.PI / 3, 0);\n    let group = new Group();\n    group.add(mesh, fontBox);\n    group.name = 'groupD5';\n    return group\n  };\n  createIrregularCube = (arr, name, color) => {\n    //绘制不规则多面体\n    let shape = new Shape([new Vector2(0, 0)]);\n    arr.forEach(item => {\n      shape.lineTo(item.x, item.y)\n    });\n    let v1 = new Vector3(0, 0, 0);\n    let v2 = new Vector3(0, 20, 0);\n    let path = new LineCurve3(v1, v2);\n    let extrudeSettings = {\n      steps: 1,\n      // depth: 10,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1,\n      extrudePath: path\n    };\n    let geometry = new ExtrudeGeometry(shape, extrudeSettings);\n    let material = new MeshPhongMaterial({\n      color: color,\n      transparent: true,\n      opacity: 1,\n    });\n    let mesh = new Mesh(geometry, material);\n    mesh.name = name;\n    return mesh;\n  };\n  createCylinder = (radiusTop, radiusBottom, height, color, opacity, name) => {\n    //绘制圆柱体\n    let geometry = new CylinderGeometry(radiusTop, radiusBottom, height, 32);\n    let material = new MeshPhongMaterial({\n      color: color.replace(/0x/, '#'),\n      // emissive:color,\n      transparent: true,\n      opacity: opacity || 1,\n    });\n    let mesh = new Mesh(geometry, material);\n    //设置模型的每个部位都可以投影\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n\n    let fontBox = getGeometryBox(\n      50,\n      20,\n      20,\n      color,\n      '',\n      '预审区'\n    );\n    fontBox.position.set(0, 30, 0);\n    fontBox.rotation.set(0, 0, 0);\n    let group = new Group();\n    group.add(mesh, fontBox);\n    group.name = name;\n    return group;\n  };\n  createFloor = () => {\n    let { scene } = this;\n    let shape = new Shape([new Vector2(0, -250)]);\n    shape.moveTo(190, -400);\n    shape.quadraticCurveTo(200, -400, 210, -390);\n    shape.lineTo(690, 90);\n    shape.quadraticCurveTo(700, 100, 700, 110);\n    shape.lineTo(700, 350);\n    shape.quadraticCurveTo(700, 400, 650, 400);\n    shape.lineTo(-180, 400);\n    shape.quadraticCurveTo(-200, 400, -220, 380);\n    shape.lineTo(-690, -90);\n    shape.quadraticCurveTo(-700, -100, -700, -110);\n    shape.lineTo(-700, -350);\n    shape.quadraticCurveTo(-700, -400, -650, -400);\n    // shape.lineTo(300, 0)\n    // shape.lineTo(0, 0);\n    // shape.lineTo(0, 400);\n    let v1 = new Vector3(0, -30, 0);\n    let v2 = new Vector3(0, 0, 0);\n\n    let path = new LineCurve3(v1, v2);\n    let extrudeSettings = {\n      steps: 2,\n      // depth: 10,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1,\n      extrudePath: path\n    };\n    let geometry2 = new ExtrudeGeometry(shape, extrudeSettings);\n    let mesh2 = new Mesh(geometry2, new MeshLambertMaterial({\n      color: 0xe5e4e4,\n      transparent: true,\n      // opacity: .5,\n      polygonOffset: true,\n      polygonOffsetFactor: 0.01,\n    }));\n    mesh2.name = 'floor';\n    // mesh2.position.set(0,30,0);\n    mesh2.scale.set(.9, 1, .9);\n    mesh2.rotation.set(0, -3 * Math.PI / 4, 0);\n    // let geometry = new BoxGeometry(1400, 0, 800);\n    // let material = new MeshBasicMaterial({\n    // \tcolor: 0x9eafbb,\n    // \topacity: 0.7,\n    // \ttransparent: true\n    // });\n    // let mesh = new Mesh(geometry, material);\n    scene.add(mesh2);\n  };\n  createPerson = () => {\n    // let { scene, camera, renderer } = this;\n    let points = [\n      new Vector2(0, 0),//top left\n      new Vector2(6, 0),//bottom left\n      new Vector2(3, 2),//bottom left\n      new Vector2(6.4, 15.8),//bottom left\n      new Vector2(3.4, 19.4),\n      new Vector2(0, 0)\n    ];\n    let geometry = new LatheGeometry(points);\n    let material = new MeshBasicMaterial({ color: 0x0000ff });\n    let lathe = new Mesh(geometry, material);\n    let geometrySphere = new SphereGeometry(4);\n    let materialSphere = new MeshLambertMaterial({\n      color: 0x0000ff\n    });\n    let sphere = new Mesh(geometrySphere, materialSphere);\n    sphere.position.set(0, 30, 0);\n    let groupPerson = new Group();\n    groupPerson.add(lathe, sphere);\n    return groupPerson;\n  };\n  animationDown = (mesh) => {\n    let { scene, camera, renderer } = this;\n    let that = this;\n    let yHeight = 30;\n    function move() {\n      yHeight--;\n      if (yHeight > 0) {\n        mesh.position.y -= 1;\n        renderer.render(scene, camera);\n        that.animationDownId = requestAnimationFrame(move);\n      }\n    }\n    move();\n  };\n  animationUp = (mesh) => {\n    let { scene, camera, renderer } = this;\n    let that = this;\n    let yHeight = 0;\n    function move() {\n      yHeight++;\n      if (yHeight < 30) {\n        mesh.position.y += 1;\n        renderer.render(scene, camera);\n        that.animationUpId = requestAnimationFrame(move);\n      } else {\n        let { match: { params: { position } } } = that.props;\n        if (position === '0') return;\n        //建筑物升起后，小人移动\n        let { currentCurve } = that.state;\n        that.animatePerson(currentCurve);\n      }\n    }\n    move();\n  };\n  animatePerson = (currentCurve) => {\n    let { scene, camera, renderer } = this;\n    // let { currentCurve } = this.state;\n    //判断当前是否存在小人，如存在移除\n    let currentPerson = scene.getObjectByName('currentPerson');\n    if (currentPerson) {\n      scene.remove(currentPerson)\n    }\n    //判断当前是否存在路径线，如存在移除\n    let currentLine = scene.getObjectByName('currentLine');\n    if (currentLine) {\n      scene.remove(currentLine)\n    }\n    // renderer.clear();\n    let that = this;\n    renderer.autoClear = true;\n    //曲线\n    // let curve = new CatmullRomCurve3(\n    //   [\n    //     new Vector3(350, 0, -20),\n    //     new Vector3(320, 0, -20),\n    //     new Vector3(230, 0, 70),\n    //     new Vector3(200, 0, 70),\n    //     new Vector3(-230, 0, 70),\n    //     new Vector3(-190, 0, -70),\n    //     // new Vector3(-190, 0, -50)\n    //   ],\n    //   false\n    // );\n\n    if (!currentCurve) return;\n\n\n    let points = currentCurve.getPoints(50);\n    let geometry = new BufferGeometry().setFromPoints(points);\n    let material = new LineDashedMaterial({\n      color: 0x0000ff,\n      dashSize: 12,\n      gapSize: 7,\n      linewidth: 10\n    });\n    let line = new Line(geometry, material);\n    line.name = 'currentLine';\n    line.computeLineDistances();\n    line.rotation.set(Math.PI / 2, 0, 0);\n\n\n    // let geometry = new TubeGeometry(curve, 100, 0.6, 50, false);\n    // let material = new LineDashedMaterial({\n    //   color: 0xff0000,\n    //   dashSize: 10,\n    //   gapSize: 3\n    // });\n    // let line = new Line(geometry, material);\n    // line.computeLineDistances();\n\n\n\n    scene.add(line);\n    // console.log(geometry);\n    //小人\n    let person = this.createPerson();\n    person.name = 'currentPerson';\n    scene.add(person);\n    renderer.render(scene, camera);\n    // if(curve) {\n    //   let pointArr = curve.getPoints(10);\n    //   pointArr.forEach(item => {\n    //     person.position.set(item.x,item.y,item.z);\n    //     // renderer.autoClear = true;\n    //     renderer.render(scene, camera);\n    //     // renderer.clear();\n    //   })\n    // }\n    let progress = 0;\n    function animate() {\n      // if (that.timer) {\n      //   clearTimeout(that.timer);\n      //   that.timer = null;\n      // }\n      progress += 0.006 * (600 / currentCurve.getLength());\n      if (currentCurve) {\n        let point = currentCurve.getPointAt(progress);\n        if (point) {\n          person.position.set(point.x, 0, point.y);\n          renderer.render(scene, camera);\n        }\n      }\n      that.animationPersonId = requestAnimationFrame(animate);\n    }\n    animate();\n  };\n\n  getPath = (index) => {\n\n    let { scene } = this;\n    let { currentPositionPaths } = this.state;\n    let pathPoint;\n    let meshName;\n    switch (index) {\n      case 0:\n        pathPoint = currentPositionPaths.pathPoint0;\n        meshName = 'meshC3';\n        break;\n      case 1:\n        pathPoint = currentPositionPaths.pathPoint1;\n        meshName = 'meshC6';\n        break;\n      case 2:\n        pathPoint = currentPositionPaths.pathPoint2;\n        meshName = 'meshB2';\n        break;\n      case 3:\n        pathPoint = currentPositionPaths.pathPoint3;\n        meshName = 'meshA7';\n        break;\n      case 4:\n        pathPoint = currentPositionPaths.pathPoint4;\n        meshName = 'meshD2';\n        break;\n      case 5:\n        pathPoint = currentPositionPaths.pathPoint5;\n        meshName = 'meshC1';\n        break;\n      case 6:\n        pathPoint = currentPositionPaths.pathPoint6;\n        meshName = 'meshD4';\n        break;\n      case 7:\n        pathPoint = currentPositionPaths.pathPoint7;\n        meshName = 'groupD5';\n        break;\n      case 8:\n        pathPoint = currentPositionPaths.pathPoint8;\n        meshName = 'groupA4';\n        break;\n      case 9:\n        pathPoint = currentPositionPaths.pathPoint9;\n        meshName = 'meshA5';\n        break;\n      case 10:\n        pathPoint = currentPositionPaths.pathPoint10;\n        meshName = 'liftGroup';\n        break;\n      case 11:\n        pathPoint = currentPositionPaths.pathPoint11;\n        meshName = 'toiletGroup';\n        break;\n      case 12:\n        pathPoint = currentPositionPaths.pathPoint12;\n        meshName = 'meshA1';\n        break;\n      case 13:\n        pathPoint = currentPositionPaths.pathPoint13;\n        meshName = 'meshC4';\n        break;\n      case 14:\n        pathPoint = currentPositionPaths.pathPoint10;\n        meshName = 'meshA9';\n        break;\n      case 15:\n        pathPoint = currentPositionPaths.pathPoint11;\n        meshName = 'meshA2';\n        break;\n      default:\n        return;\n    }\n    if (prevMesh) {\n      this.animationDown(prevMesh)\n    }\n    currentMesh = scene.getObjectByName(meshName);\n    this.animationUp(currentMesh);\n    prevMesh = currentMesh;\n\n    let curve = new Path();\n    pathPoint.forEach((item, index) => {\n      index ? curve.lineTo(item.x, item.y) : curve.moveTo(item.x, item.y)\n    });\n\n    //保存当前的路径形状\n    this.setState({\n      currentCurve: curve\n    })\n  };\n  getCurrentPositionPaths = () => {\n    this.setState({\n      currentPositionPaths: pathArray[0]\n    })\n  };\n  componentDidMount() {\n    this.initPersonXY();\n    this.getCurrentPositionPaths();\n    this.three.appendChild(this.renderer.domElement);\n  }\n  addClickEvent = () => {\n    let { scene } = this;\n    // let that = this;\n    cubeArray.forEach(item => {\n      let cube = scene.getObjectByName(item.name);\n      cube.on('click', (ev) => {\n        if (item.isNav) {\n          this.changeNav(item.pathIndex, item.title);\n        } else {\n          this.getPath(item.pathIndex);\n        }\n      });\n      cube.cursor = 'pointer';\n    })\n  };\n  changeNav = (index, title) => {\n    this.setState({\n      currentNav: index,\n      title,\n      currentFastNav: null,\n      isShowTips: false\n    });\n    this.getPath(index);\n  };\n  changeFastNav = (num) => {\n    let { match: { params: { position } } } = this.props;\n    this.setState({\n      currentFastNav: num,\n      currentNav: null\n    });\n    this.getPath(num);\n    if ((num === 10 || num === 11) && position !== '0') {\n      this.setState({\n        isShowTips: true\n      })\n    } else {\n      this.setState({\n        isShowTips: false\n      })\n    }\n  };\n  routerNav = (item) => {\n    let { location: { search } } = this.props;\n    let floorName = search.split('=')[1];\n    let position = floorName === item.name ? 1 : 0;\n\n    this.clearAnimationFrame();\n\n    this.props.history.push(`${item.path}/${position}?floor-name=${floorName}`);\n  };\n  componentWillUnmount() {\n    this.interaction.removeEvents();\n    this.renderer = null;\n    this.clearAnimationFrame();\n  }\n  clearAnimationFrame = () => {\n    cancelAnimationFrame(this.animationUpId);\n    cancelAnimationFrame(this.animationDownId);\n    cancelAnimationFrame(this.animationPersonId);\n  };\n  render() {\n    let { currentIndex, currentNav, title, currentFastNav, isShowTips } = this.state;\n    return (\n      <div className={'floor-two'}>\n        <div className=\"main-left\">\n          <div\n            className=\"canvas\"\n            style={{ textAlign: 'center' }}\n            ref={(el) => (this.three = el)}\n          >\n            <div className=\"detail\">\n              {/* <h3>{title}</h3> */}\n              {/* <div className=\"window-information\">\n                <div className=\"left\">\n                  <div className=\"window-count\">\n                    <span>窗口数: 9</span>\n                    <span>排队数: 21</span>\n                  </div>\n                  <div className=\"delay-time\">\n                    <span>预计等待时间: 2小时20分钟</span>\n                  </div>\n                </div>\n                <div className=\"right\">\n                  <div className=\"btn\" onClick={this.animatePerson}>\n                    <span><Icon type=\"arrow-right\" /></span>\n                    <span>点我导航</span>\n                  </div>\n                </div>\n              </div> */}\n              <div className=\"window-item\">\n                <h4>常办事项:</h4>\n                <div className=\"window-item-detail\">\n                  <span> 社保类、</span>\n                  <span> 税务类窗口</span>\n                </div>\n              </div>\n            </div>\n            {\n              isShowTips ?\n                <div className=\"tips\">\n                  共找到2个目标，已为您导航至最近的目标\n                </div>\n                :\n                ''\n            }\n          </div>\n          <div className=\"footer\">\n            <ul className=\"left-floor-num\">\n              {\n                [\n                  { name: '1F', path: '/floor-one' },\n                  { name: '2F', path: '/floor-two' },\n                  { name: '3F', path: '/floor-three' }\n                ].map((item, index) => {\n                  return (\n                    <li\n                      key={index}\n                      onClick={() => { this.routerNav(item) }}\n                      className={index === currentIndex ? 'active' : ''}\n                    >\n                      {item.name}\n                    </li>\n                  )\n                })\n              }\n            </ul>\n            <div className=\"fast-nav\">\n              <div\n                className={currentFastNav === 10 ? 'active' : ''}\n                onClick={() => { this.changeFastNav(10) }}>\n                <LiftIcon />\n                <span>电梯间</span>\n              </div>\n\n              <div\n                className={currentFastNav === 11 ? 'active' : ''}\n                onClick={() => { this.changeFastNav(11) }}>\n                <ToiletIcon />\n                <span>卫生间</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"right-nav\">\n          <div className=\"info\">\n            <DateBox floor={2} />\n          </div>\n          <h3>你想要去哪儿?</h3>\n          <div className=\"nav-container\">\n            <ul className=\"wrap\">\n              {\n                navList.map((item, index) => {\n                  return (\n                    <li\n                      key={index}\n                      className={(index === currentNav ? 'active' : '')}\n                      onClick={() => { this.changeNav(item.number, item.name) }}\n                    >\n                      <span className={index === currentNav - 1 ? 'no-border' : ''}>\n                        {item.name}\n                      </span>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FloorTwo;\n","/**\n* @Description:\n* @author: Eric\n* @version:\n* @date: 2019-07-10 14:49\n*/\nlet pathArray = [\n  {\n    pathPoint0: [\n      {x: -150,y: 10},\n      {x: 150,y: 80},\n      {x: 180,y: 110},\n      {x: 360,y: 300},\n    ],\n    pathPoint1: [\n      {x: -150,y: 10},\n      {x: 150,y: 80},\n      {x: 170,y: 100},\n      {x: 285,y: -15},\n      {x: 185,y: -115},\n    ],\n    pathPoint2: [\n      {x: -150,y: 10},\n      {x: 0,y: 160},\n      {x: 50,y: 160},\n    ],\n    pathPoint3: [\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -350,y: -120},\n    ],\n    pathPoint4: [\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -420,y: -190},\n      {x: -320,y: -250},\n      {x: -150,y: -250},\n    ],\n    pathPoint5: [\n      {x: -150,y: 10},\n      {x: 150,y: 80},\n      {x: 210,y: 140},\n    ],\n    pathPoint6: [\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -420,y: -190},\n      {x: -320,y: -250},\n      {x: -40,y: -250},\n      {x: -40,y: -310},\n    ],\n    pathPoint7: [\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -420,y: -190},\n      {x: -320,y: -250},\n      {x: 40,y: -250},\n      {x: 40,y: -310}\n    ],\n    pathPoint8: [\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -465,y: -235},\n      {x: -540,y: -160},\n      {x: -560,y: -180},\n    ],\n    pathPoint9: [\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -465,y: -235},\n      {x: -540,y: -160},\n    ],\n    pathPoint10: [\n      {x: -150,y: 10},\n      {x: -150,y: 60},\n    ],\n    pathPoint11: [\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -465,y: -235},\n    ],\n\n    pathPoint12: [\n      //电梯\n      {x: -150,y: 10},\n      {x: -220,y: 10},\n      {x: -420,y: -190},\n      {x: -420,y: -285},\n    ],\n    pathPoint13: [\n      //洗手间\n      {x: -150,y: 10},\n      {x: 150,y: 80},\n      {x: 170,y: 100},\n      {x: 285,y: -15},\n      {x: 485,y: 185},\n    ]\n  }\n];\nexport default pathArray;\n","import React from 'react';\nimport { Icon } from 'antd';\nconst LiftSvg = () => {\n  return (\n    <svg t=\"1561427307417\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"3669\" width=\"2em\" height=\"2em\">\n      <path\n        d=\"M524.461822 379.39282c22.960862 0 41.565331-17.403369 41.565331-38.873356 0-21.467941-18.605492-38.858006-41.565331-38.858006-22.945512 0-40.393597 17.389042-40.393597 38.858006C484.068225 361.989451 501.51631 379.39282 524.461822 379.39282zM192.214455 938.541653l88.888018 0L281.102474 79.319533l-88.888018 0L192.214455 938.541653zM503.324566 212.6901l29.614671 0L532.939238 103.854323l59.245716 41.172725L592.184954 115.920126l-74.044354-51.458999-74.045377 51.458999 0 29.106922 59.230366-41.172725L503.32559 212.6901zM325.547506 775.585257l385.184142 0L710.731648 242.274906 325.547506 242.274906 325.547506 775.585257zM355.177528 271.90269l325.925122 0 0 474.05376L355.177528 745.95645 355.177528 271.90269zM755.175657 79.319533l0 859.222119 88.889042 0L844.064699 79.319533 755.175657 79.319533zM578.411712 392.268058 453.093523 392.268058c0 0-18.2289-2.155083-23.928949 12.96222l0 117.254517c0 0 0.49223 12.006452 13.165374 12.006452 0 0 14.105831 0.072655 14.105831-12.672624l0-70.917166c0 0 7.826566-16.131399 13.671931 0.810459l0.071634 251.465219c0 0-0.491207 12.890588 13.179701 12.890588l14.163138 0.202615c0 0 13.383347-0.146333 13.383347-13.093203L510.905529 586.459852c0 0 0.506557-6.611581 7.623944-6.611581 0 0 6.264937 2.357697 6.264937 6.885827l0 117.529787c0 0 0 11.805884 13.670908 11.805884l13.744589 0c0 0 13.671931-0.809435 13.671931-11.805884L565.881837 450.700889c0 0 4.919234-14.973016 13.671931-0.202615l0.448226 71.843258c0 0-3.182613 12.428054 14.092527 12.428054 12.991404 0 12.587182-11.877515 12.587182-11.877515l0.144292-117.659747C606.824972 405.230278 600.069852 392.268058 578.411712 392.268058zM532.939238 805.170063l-29.614671 0 0 108.834754-59.230366-41.172725 0 29.107945 74.045377 51.457975 74.044354-51.457975 0-29.107945-59.245716 41.172725L532.938214 805.170063z\"\n        fill=\"currentColor\" p-id=\"3670\" />\n    </svg>\n  )\n};\nconst ToiletSvg = () => {\n  return (\n    <svg t=\"1561427147713\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"3550\" width=\"2em\" height=\"2em\">\n      <path\n        d=\"M233.44 286.41a80.21 80.21 0 1 1 80.2-80.21 80.3 80.3 0 0 1-80.2 80.21z m0-110.42a30.21 30.21 0 1 0 30.2 30.21 30.25 30.25 0 0 0-30.2-30.2zM300.05 604.13H157.37a36.4 36.4 0 0 1-36.3-34.4L92.65 338.56V337A36.39 36.39 0 0 1 129 300.68h208.87A36.39 36.39 0 0 1 374.22 337v2L336.3 570.37a36.39 36.39 0 0 1-36.25 33.76z m-130.52-50H288.3l33.35-203.45H144.52z\"\n        fill=\"currentColor\" p-id=\"3551\" />\n      <path\n        d=\"M261.44 828.4h-56a37.05 37.05 0 0 1-37-36.24L157.21 556.4h152.45l-11.22 235.76a37.05 37.05 0 0 1-37 36.24z m-43.6-50H249l8.19-172h-47.54zM494.56 939.55a25 25 0 0 1-25-25V116.47a25 25 0 1 1 50 0v798.08a25 25 0 0 1-25 25zM763.32 286.41a80.21 80.21 0 1 1 80.21-80.21 80.3 80.3 0 0 1-80.21 80.21z m0-110.42a30.21 30.21 0 1 0 30.21 30.21 30.25 30.25 0 0 0-30.21-30.2zM788.37 822.22h-50.1c-19.74 0-34.77-12.38-35.69-29.05l-11.34-125.64H835.4l-11.35 125.64c-0.91 16.67-15.95 29.05-35.68 29.05z m-37.48-50h24.85l4.94-54.69H746z\"\n        fill=\"currentColor\" p-id=\"3552\" />\n      <path\n        d=\"M876 711.34H650.64c-20.4 0-37-16.09-37-35.88v-2.16l60.11-345c1.48-18.48 17.46-33.08 36.89-33.08H816c19.43 0 35.41 14.6 36.89 33.08l60.11 345v2.16c0 19.79-16.61 35.88-37 35.88z m-209.51-50h193.67l-55.08-316.12h-83.52z\"\n        fill=\"currentColor\" p-id=\"3553\" />\n    </svg>\n  )\n};\nconst  NurserySvg = () => {\n  return (\n    <svg t=\"1561426601150\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"3432\" width=\"2em\" height=\"2em\">\n      <path\n        d=\"M941.056 868.352c45.568 0 82.944-37.376 82.944-83.456s-37.376-83.456-82.944-83.456c-46.08 0-83.456 37.376-83.456 83.456 0 46.592 37.376 83.456 83.456 83.456zM431.616 946.176h586.752v69.12H431.616zM765.952 640v118.784h-154.624l16.896-22.016 1.024-1.024 6.144-8.192 0.512-0.512 1.536-4.608c3.584-11.264 1.024-24.064-8.192-33.28l-102.912-102.4c-13.312-12.8-33.792-12.8-47.104 0-12.8 12.8-12.8 33.792 0 47.104l75.264 74.24L479.232 778.24s-35.328 53.248 26.112 94.72h274.944s51.2 3.072 52.224-73.216v-1.024l0.512-4.608V640c0-18.432-14.848-33.28-33.28-33.28-19.456 0-33.792 14.848-33.792 33.28zM617.984 118.272l4.096 11.264 5.632 10.752 7.68 9.216 8.704 8.704 9.728 7.168 10.752 6.144 10.752 3.584 12.8 3.072h23.04l12.288-3.072 11.264-4.096 10.752-6.144 9.728-7.168 8.192-8.704 7.168-9.728 5.632-10.752 4.608-11.264 2.048-11.776 1.024-12.288-1.024-11.264-2.56-12.8-4.096-10.752-6.144-10.752-7.168-9.728-8.192-8.192-10.24-7.68-10.752-5.632-11.264-4.608-11.776-2.048-12.288-1.024-11.776 1.024-12.288 2.56-10.752 4.608-10.752 5.632-9.728 7.68-8.704 8.704-7.168 9.728-5.632 10.752-3.584 10.752-2.56 12.288-0.512 12.288 0.512 11.776z\"\n        fill=\"currentColor\" p-id=\"3433\" />\n      <path\n        d=\"M315.904 432.64l42.496-22.016 154.112-80.384 1.024 128.512 5.632 7.168 52.736 58.88 72.704 80.384 7.168 5.632 7.68 4.096 7.68 2.56 9.216 0.512 7.68-0.512 8.704-3.072 7.168-3.584 7.168-6.656 5.12-6.656 4.096-6.656 1.536-7.68 1.024-9.728-3.584-16.384-4.096-7.68-17.92-20.992-92.16-102.4-0.512-4.608V222.72l-2.048-20.992-5.12-18.944-9.216-17.92-14.336-16.896-12.8-10.752-13.824-8.192-14.848-6.656-15.36-4.096-15.36-1.024-15.872 0.512-14.336 3.584-25.6 11.776-238.592 125.952-88.064 42.496c-36.352 18.432-45.568 69.632-45.568 70.144L0 706.56h145.408v257.536c0 33.28 23.552 45.056 43.008 45.056 19.968 0 43.008-11.776 43.008-45.056V706.56h140.288L315.904 432.64z\"\n        fill=\"currentColor\" p-id=\"3434\" />\n    </svg>\n  )\n};\nexport const LiftIcon = props => <Icon component={ LiftSvg } {...props} />;\nexport const ToiletIcon = props => <Icon component={ ToiletSvg } {...props}/>;\nexport const NurseryIcon = props => <Icon component={ NurserySvg } {...props}/>;\n","import { BoxGeometry, CanvasTexture, LinearFilter, Mesh, MeshPhongMaterial } from \"three\";\n\n/**\n * 返回一个canvas文字图\n * @param width 宽度\n * @param height 高度\n * @param text 文字\n * @param color 背景色\n * @param fontSize 文字大小\n * @param fontColor 文字颜色\n * @param rotateDirection 文字旋转\n *        normal - 不旋转 right - 顺时针旋转90 left - 逆时针旋转90\n * @returns {HTMLElement}\n */\nfunction getTextCanvas(width, height, text, color, fontSize, fontColor,rotateDirection){\n  let canvas = document.createElement('canvas');\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = width + 'px';\n  canvas.style.height = height + 'px';\n  let ctx = canvas.getContext('2d');\n  ctx.translate(width,height);\n  ctx.fillStyle = color.replace(/0x/,'#');\n  ctx.fillRect(-width, -height, width * 2, height * 2);\n  ctx.font = (fontSize || '30px') + ' bold';\n  ctx.fillStyle = fontColor || '#FFFFFF';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  if(rotateDirection) {\n    let angel;\n    switch (rotateDirection) {\n      case 'right' :\n        angel = Math.PI/2;\n        break;\n      case 'left' :\n        angel = -Math.PI/2;\n        break;\n      case 'normal' :\n        angel = 0;\n        break;\n      default:\n        break;\n    }\n    ctx.rotate(angel);\n  } else if(width < height) {\n    ctx.rotate(Math.PI/2);\n  }\n  ctx.fillText(text, 0, 0);\n  return canvas;\n}\n\n/**\n * 返回一个立方体mesh\n * @param width 宽度\n * @param height 高度\n * @param depth 深度\n * @param color 材质颜色\n * @param name mesh的名字\n * @param canvasText 立方体表面文字\n * @param opacity 透明度\n * @param fontSize 立方体表面文字尺寸\n * @param fontColor 立方体表面文字颜色\n * @param canvasRotationDirection 文字旋转\n *        normal - 不旋转 right - 顺时针旋转90 left - 逆时针旋转90\n * @returns {Mesh}\n */\nfunction getGeometryBox(\n  width,\n  height,\n  depth,\n  color,\n  name,\n  canvasText,\n  opacity,\n  fontSize,\n  fontColor,\n  canvasRotationDirection\n) {\n  let geometry = new BoxGeometry(width, height, depth);\n  let canvas = getTextCanvas(width, depth, canvasText, color, fontSize, fontColor, canvasRotationDirection);\n  let texture = new CanvasTexture(canvas);\n  texture.minFilter = LinearFilter;\n  let material = new MeshPhongMaterial({\n    //材质的颜色会与贴图的颜色叠加,只设置贴图颜色即可\n    // color: color.replace(/0x/,'#'),\n    // emissive:color,\n    transparent: true,\n    opacity: opacity || 1,\n    map: texture,\n    polygonOffset: true,\n    polygonOffsetFactor: -1,\n    polygonOffsetUnits: 1\n  });\n\n  let materialColor = new MeshPhongMaterial({\n    color: color.replace(/0x/, \"#\"),\n    transparent: true,\n    opacity: opacity || 1\n  });\n\n  let materialArr = [\n    materialColor,\n    materialColor,\n    material,\n    materialColor,\n    materialColor,\n    materialColor\n  ];\n  /*geometry.faceVertexUvs[0].map((item,index) => {\n    item = [\n      new Vector2(0, 0),\n      new Vector2(0, 0),\n      new Vector2(0, 0)\n    ]\n  });\n  // geometry.faceVertexUvs[0] = [];\n  geometry.faceVertexUvs[0][4] = [\n    new Vector2(0, 1),\n    new Vector2(0, 0),\n    new Vector2(1, 1)\n  ];\n  geometry.faceVertexUvs[0][5] = [\n    new Vector2(0, 0),\n    new Vector2(1, 0),\n    new Vector2(1, 1)\n  ];*/\n  let mesh = new Mesh(geometry, materialArr);\n  //设置模型的每个部位都可以投影\n  mesh.castShadow = true;\n  mesh.receiveShadow = true;\n  mesh.name = name;\n  return mesh;\n}\n\nexport { getTextCanvas, getGeometryBox }\n","/**\n * @return {string}\n */\nfunction FormatDateTime(timeStamp,type){\n  let weekDay = ['周日','周一','周二','周三','周四','周五','周六'];\n  let date = new Date();\n  date.setTime(timeStamp);\n  let y = date.getFullYear();\n  let m = date.getMonth() + 1;\n  m = m < 10 ? ('0' + m) : m;\n  let d = date.getDate();\n  d = d < 10 ? ('0' + d) : d;\n  let h = date.getHours();\n  h = h < 10 ? ('0' + h) : h;\n  let minute = date.getMinutes();\n  let second = date.getSeconds();\n  minute = minute < 10 ? ('0' + minute) : minute;\n  second = second < 10 ? ('0' + second) : second;\n  let week = date.getDay();\n  let result;\n  switch (type) {\n    case 1 :\n      result =  y + '年' + m + '月' + d + '日' ;\n      break;\n    case 2 :\n      result = `${h}:${minute}`;\n      break;\n    case 3 :\n      result = weekDay[week];\n      break;\n    case 4 :\n      result = y + '-' + m + '-' + d+'  '+h+':'+minute+':'+second;\n      break;\n    default :\n      return '';\n  }\n  return result;\n}\nexport default FormatDateTime;\n","import React, { Component } from 'react';\nimport FormatDateTime from \"../../utils/formateDatetime\";\nimport './DateBox.less';\nclass DateBox extends Component {\n  state = {\n    dateTime: Date.now()\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({\n        dateTime: Date.now()\n      })\n    },1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    let { floor } = this.props;\n    let { dateTime } = this.state;\n    return (\n      <div className=\"date-box\">\n        <div className=\"date\">\n          <span>{FormatDateTime(dateTime,1)}</span>\n          <span>{FormatDateTime(dateTime,3)}</span>\n        </div>\n        <div className=\"time\">\n          {FormatDateTime(dateTime,2)}\n        </div>\n        <div className=\"floor-info\">\n          当前所在: {floor} 层\n        </div>\n      </div>\n    )\n  }\n}\nexport default DateBox;\n"],"sourceRoot":""}