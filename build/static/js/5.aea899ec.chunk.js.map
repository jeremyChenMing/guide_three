{"version":3,"sources":["pages/FloorThree/FloorThree.js","pages/FloorThree/floor-three-path.js","static/icon/icons.js","utils/threeUtils.js","utils/formateDatetime.js","component/dateBox/DateBox.js"],"names":["prevMesh","currentMesh","pathArray","pathPoint0","x","y","pathPoint1","pathPoint2","pathPoint3","pathPoint4","pathPoint5","pathPoint6","pathPoint7","pathPoint8","pathPoint9","pathPoint10","pathPoint11","pathPoint12","cubeArray","title","pathIndex","name","isNav","FloorThree","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","init","_assertThisInitialize","assertThisInitialized","scene","camera","renderer","createFloor","initGeometryBoxOne","initGeometryBoxTwo","initGeometryBoxThree","initGeometryBoxFour","addClickEvent","render","boxA1","getGeometryBox","position","set","boxA3","boxA4","createSector","boxA5","boxA6","boxA7","boxA8","liftGroup","Group","add","group","rotation","Math","PI","boxB1","boxB2","boxB3","boxA2","boxC1","boxC2","boxC3","boxC4","boxC5","boxC6","boxC7","boxC8","toiletGroup","boxD1","boxD2","boxD3","boxD4","boxD5","boxD6","boxD7","initPerson","_assertThisInitialize6","personCurrentXY","state","person","createPerson","shapeCircle","Shape","Vector2","absarc","shapeMin","geometryCircle","ShapeGeometry","materialCircle","MeshBasicMaterial","color","materialCircleMin","polygonOffset","polygonOffsetFactor","meshCircle","Mesh","initControl","_assertThisInitialize7","requestAnimationFrame","initPersonXY","positionObj","match","params","setState","shape","moveTo","lineTo","v1","Vector3","v2","extrudeSettings","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","LineCurve3","geometry","ExtrudeGeometry","material","MeshPhongMaterial","mesh","fontBox","createIrregularCube","arr","forEach","item","transparent","opacity","quadraticCurveTo","geometry2","mesh2","MeshLambertMaterial","scale","points","LatheGeometry","lathe","geometrySphere","SphereGeometry","materialSphere","sphere","groupPerson","animationDown","_assertThisInitialize9","that","yHeight","move","animationDownId","animationUp","_assertThisInitialize10","animationUpId","currentCurve","animatePerson","_assertThisInitialize11","currentPerson","getObjectByName","remove","currentLine","autoClear","getPoints","BufferGeometry","setFromPoints","LineDashedMaterial","dashSize","gapSize","linewidth","line","Line","computeLineDistances","progress","animate","getLength","point","getPointAt","animationPersonId","getPath","index","pathPoint","meshName","currentPositionPaths","curve","Path","getCurrentPositionPaths","cube","on","ev","changeNav","cursor","clearAnimationFrame","currentNav","currentFastNav","isShowTips","changeFastNav","routerNav","floorName","location","search","split","history","push","concat","path","cancelAnimationFrame","Scene","OrthographicCamera","up","lookAt","Window","WebGLRenderer","antialias","preserveDrawingBuffer","alpha","setPixelRatio","window","devicePixelRatio","setSize","shadowMap","enabled","interaction","Interaction","AmbientLight","light","DirectionalLight","castShadow","currentIndex","three","appendChild","domElement","removeEvents","_this2","_this$state","_react_16_12_0_react_default","a","createElement","className","style","textAlign","ref","el","map","key","onClick","icons","DateBox","floor","Component","LiftSvg","react__WEBPACK_IMPORTED_MODULE_2___default","t","viewBox","version","xmlns","p-id","width","height","d","fill","ToiletSvg","NurserySvg","LiftIcon","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","assign","component","ToiletIcon","NurseryIcon","__webpack_require__","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","depth","canvasText","fontSize","fontColor","canvasRotationDirection","BoxGeometry","canvas","text","rotateDirection","document","ctx","getContext","translate","fillStyle","replace","fillRect","font","textBaseline","angel","rotate","fillText","getTextCanvas","texture","CanvasTexture","minFilter","LinearFilter","polygonOffsetUnits","materialColor","materialArr","receiveShadow","FormatDateTime","timeStamp","type","date","Date","setTime","getFullYear","m","getMonth","getDate","h","getHours","minute","getMinutes","second","getSeconds","result","week","getDay","dateTime","now","timer","setInterval","clearInterval"],"mappings":"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","file":"static/js/5.aea899ec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  AmbientLight,\n  // AxesHelper,\n  BufferGeometry,\n  DirectionalLight,\n  ExtrudeGeometry,\n  // GridHelper,\n  Group,\n  LatheGeometry,\n  Line,\n  LineCurve3,\n  LineDashedMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  OrthographicCamera,\n  Path,\n  Scene,\n  Shape,\n  ShapeGeometry,\n  SphereGeometry,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport { Interaction } from \"three.interaction\";\nimport \"./FloorThree.less\";\n\nimport { LiftIcon, ToiletIcon } from \"../../static/icon/icons\";\nimport pathArray from \"./floor-three-path\";\nimport { getGeometryBox } from '../../utils/threeUtils';\nimport DateBox from \"../../component/dateBox/DateBox\";\nconst cubeArray = [\n  {\n    title: '接待前台',\n    pathIndex: 0,\n    name: 'meshD6',\n    isNav: true\n  },\n  {\n    title: '经济类窗口',\n    pathIndex: 1,\n    name: 'meshD2',\n    isNav: true\n  },\n  {\n    title: '社会加建设类窗口',\n    pathIndex: 2,\n    name: 'meshC6',\n    isNav: true\n  },\n  {\n    title: '入驻单位',\n    pathIndex: 3,\n    name: 'meshC7',\n    isNav: true\n  },\n  {\n    title: '询标接待室',\n    pathIndex: 4,\n    name: 'meshC2',\n    isNav: true\n  },\n  {\n    title: '窗口5个',\n    pathIndex: 5,\n    name: 'meshC1',\n    isNav: true\n  },\n  {\n    title: '公安自助服务区',\n    pathIndex: 6,\n    name: 'meshD4',\n    isNav: true\n  },\n  {\n    title: '公安窗口',\n    pathIndex: 7,\n    name: 'meshA8',\n    isNav: true\n  },\n  {\n    title: '呼叫中心',\n    pathIndex: 8,\n    name: 'groupA4',\n    isNav: true\n  },\n  {\n    title: '',\n    pathIndex: 13,\n    name: 'meshA5',\n    isNav: false\n  },\n  {\n    title: '',\n    pathIndex: 14,\n    name: 'meshA2',\n    isNav: false\n  },\n  {\n    title: '',\n    pathIndex: 11,\n    name: 'meshA1',\n    isNav: false\n  },\n  {\n    title: '',\n    pathIndex: 12,\n    name: 'meshC4',\n    isNav: false\n  }\n];\nlet prevMesh;\nlet currentMesh;\nclass FloorThree extends Component {\n  constructor(props) {\n    super(props);\n    this.scene = new Scene();\n    // this.scene.background = new Color('rgb(0,140,0)');\n    // this.scene.fog = new Fog(0xa0a0a0, 200, 1000);\n    // this.camera = new PerspectiveCamera(45, 1.75, 1, 2000);\n    this.camera = new OrthographicCamera(-700,700, 400,-400, 1, 2000);\n    this.camera.position.set(0, 400, 500);\n    this.camera.up.set(0, 1, 0);\n    this.camera.lookAt(0, 0, 0);\n    this.renderer = Window.renderer = Window.renderer ?\n      Window.renderer\n      :\n      new WebGLRenderer({\n        antialias: true,\n        preserveDrawingBuffer: true,\n        alpha: true\n      });\n    // this.renderer.setClearAlpha(0);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.autoClear = true;\n    this.renderer.setSize(1500, 900);\n    // 允许阴影投射\n    this.renderer.shadowMap.enabled = true;\n    //第三方库给对象添加事件\n    this.interaction = new Interaction(this.renderer, this.scene, this.camera);\n\n    //坐标轴辅助\n    // let axes = new AxesHelper(400);\n    // this.scene.add(axes);\n\n    this.scene.add(new AmbientLight(0x555555));\n\n    this.light = new DirectionalLight(0xffffff,1);\n    this.light.position.set(0, 700, 500);\n    this.light.castShadow = true;\n    //告诉平行光需要开启阴影投射\n    this.light.castShadow = true;\n\n    // this.light1 = new PointLight(0xffffff);\n    // this.light1.position.set(0, 600, 600);\n    // this.scene.add(this.light1);\n    // this.light.shadow.camera.top = 180;\n    // this.light.shadow.camera.bottom = -100;\n    // this.light.shadow.camera.left = -120;\n    // this.light.shadow.camera.right = 120;\n\n    this.scene.add(this.light);\n\n    /*this.pointLight = new PointLight(0xffffff);\n    this.pointLight.position.set(-70, 300, 600);\n    this.pointLight.shadow.mapSize.width = 5120; // 必须是 2的幂，默认值为 512\n    this.pointLight.shadow.mapSize.height = 5120; // 必须是 2的幂，默认值为 512\n    this.pointLight.castShadow = true;\n    this.scene.add(this.pointLight);*/\n\n    // this.renderer.setClearColor(0xFFFFFF, 1.0);\n\n    /*this.light = new PointLight(0xffffff);\n    this.light.position.set(0, 0, 300);\n    this.scene.add(this.light);*/\n    //网格\n    // this.helper = new GridHelper(1500, 150, 0xff0000, 0x00ff00);\n    // this.scene.add(this.helper);\n\n    // this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.state = {\n      currentIndex: 2,\n      currentNav: null,\n      currentFastNav: null,\n      title: '前台',\n      currentCurve: null,\n      personCurrentXY:{x:0,y:0},\n      currentPositionPaths:[],\n      isShowTips: false\n    };\n  }\n  init = () => {\n    let { scene, camera, renderer } = this;\n    this.createFloor();\n    this.initGeometryBoxOne();\n    this.initGeometryBoxTwo();\n    this.initGeometryBoxThree();\n    this.initGeometryBoxFour();\n    this.addClickEvent();\n    // this.initControl();\n    renderer.render(scene, camera);\n  };\n  initGeometryBoxOne = () => {\n    let { scene } = this;\n    let boxA1 = getGeometryBox(\n      60,\n      80,\n      80,\n      '0x577ED8',\n      'meshA1',\n      '电梯',\n      '',\n      '',\n      \"#fff\",\n      'normal'\n    );\n    boxA1.position.set(-440,-20,-310);\n\n    let boxA3 = getGeometryBox(\n      80,\n      80,\n      40,\n      '0x9D9D9D',\n      'meshA3',\n      ''\n    );\n    boxA3.position.set(-440,-20,-170);\n\n    let boxA4 = this.createSector();\n    boxA4.position.set(-430,0,-120);\n    let boxA5 = getGeometryBox(\n      60,\n      80,\n      80,\n      '0x577ED8',\n      'meshA5',\n      '电梯',\n      1,\n      '20px',\n      '#fff',\n      'normal'\n    );\n    boxA5.position.set(70,-20,-190);\n    let boxA6 = getGeometryBox(\n      600,\n      80,\n      50,\n      '0x9D9D9D',\n      'meshA6',\n      ''\n    );\n    boxA6.position.set(-80,-20,-95);\n    let boxA7 = getGeometryBox(\n      80,\n      80,\n      80,\n      '0x9D9D9D',\n      'meshA7',\n      '',\n      '',\n      '25px'\n    );\n    boxA7.position.set(-340,-20,-190);\n    let boxA8 = getGeometryBox(\n      300,\n      80,\n      80,\n      '0x1D777B',\n      'meshA8',\n      '公安窗口'\n    );\n    boxA8.position.set(-130,-20,-190);\n    let liftGroup = new Group();\n    liftGroup.add( boxA1, boxA5 );\n    liftGroup.name = 'liftGroup';\n    let group = new Group();\n    group.add( boxA3, boxA4, boxA6, boxA7, boxA8, liftGroup);\n    group.rotation.set(0,-Math.PI/180*45,0);\n    group.position.set(-360,0,210);\n    scene.add(group);\n  };\n  initGeometryBoxTwo = () => {\n    let { scene } = this;\n    let boxB1 = getGeometryBox(\n      420,\n      80,\n      50,\n      '0x9D9D9D',\n      'meshB1',\n      ''\n    );\n    boxB1.position.set(-10,-20,0);\n\n    let boxB2 = getGeometryBox(\n      300,\n      80,\n      70,\n      '0x9D9D9D',\n      'meshB2',\n      ''\n    );\n    boxB2.position.set(-70,-20,-100);\n    let boxB3 = getGeometryBox(\n      160,\n      80,\n      40,\n      '0xE6B3ED',\n      'meshB3',\n      '扶梯',\n      '',\n      ''\n    );\n    boxB3.position.set(-80,-20,-210);\n\n    let group = new Group();\n    group.add(boxB1, boxB2, boxB3);\n    group.position.set(140,0,315);\n    scene.add(group);\n  };\n  initGeometryBoxThree = () => {\n    let { scene } = this;\n    let boxA2 = getGeometryBox(\n      80,\n      80,\n      60,\n      '0xB992E9',\n      'meshA2',\n      '厕所'\n    );\n    boxA2.position.set(-300,-20,-1012);\n    boxA2.rotation.set(0,-Math.PI/2,0);\n    let boxC1 = getGeometryBox(\n      120,\n      80,\n      40,\n      '0xDD7C60',\n      'meshC1',\n      '窗口5个'\n    );\n    boxC1.position.set(0,-20,-120);\n    let boxC2 = getGeometryBox(\n      120,\n      80,\n      120,\n      '0xEEC459',\n      'meshC2',\n      '询标接待室'\n    );\n    boxC2.position.set(0,-20,-20);\n    let boxC3 = getGeometryBox(\n      120,\n      80,\n      40,\n      '0x9D9D9D',\n      'meshC3',\n      ''\n    );\n    boxC3.position.set(0,-20,80);\n    let boxC4 = getGeometryBox(\n      100,\n      80,\n      80,\n      '0xC28DEF',\n      'meshC4',\n      '厕所'\n    );\n    boxC4.position.set(150,-20,0);\n    let boxC5 = getGeometryBox(\n      100,\n      80,\n      160,\n      '0x9D9D9D',\n      'meshC5',\n      '',\n      '',\n      '27px'\n    );\n    boxC5.position.set(150,-20,-140);\n    let boxC6 = getGeometryBox(\n      100,\n      80,\n      280,\n      '0xFF5722',\n      'meshC6',\n      '社会加建设类窗口'\n    );\n    boxC6.position.set(150,-20,-380);\n    let boxC7 = getGeometryBox(\n      60,\n      80,\n      200,\n      '0x6AB05C',\n      'meshC7',\n      '入驻单位'\n    );\n    boxC7.position.set(-30,-20,-340);\n    let boxC8 = getGeometryBox(\n      100,\n      80,\n      80,\n      '0x9D9D9D',\n      'meshC8',\n      ''\n    );\n    boxC8.position.set(150,-20,-580);\n    let toiletGroup = new Group();\n    toiletGroup.add( boxA2, boxC4 );\n    toiletGroup.name = 'toiletGroup';\n    let group = new Group();\n    group.add(boxC1, boxC2,boxC3, boxC5, boxC6, boxC7, boxC8, toiletGroup);\n    // group.position.set(0,0,200);\n    group.rotation.set(0,Math.PI/180 * 45,0);\n    group.position.set(420,0,240);\n    scene.add(group);\n  };\n  initGeometryBoxFour = () => {\n    let { scene } = this;\n    let boxD1 = getGeometryBox(\n      80,\n      80,\n      80,\n      '0x9D9D9D',\n      'meshD1',\n      '',\n      1\n    );\n    boxD1.position.set(0,-20,0);\n    let boxD2 = getGeometryBox(\n      300,\n      80,\n      50,\n      '0x83C6ED',\n      'meshD2',\n      '经济类窗口'\n    );\n    boxD2.position.set(210,-20,65);\n\n    let boxD3 = getGeometryBox(\n      300,\n      80,\n      50,\n      '0x9D9D9D',\n      'meshD3',\n      ''\n    );\n    boxD3.position.set(210,-20,-15);\n\n    let boxD4 = getGeometryBox(\n      80,\n      80,\n      80,\n      '0xC7713F',\n      'meshD4',\n      '公安自助服务区',\n      '',\n      '20px'\n    );\n    boxD4.position.set(0,-20,140);\n\n    let boxD5 = getGeometryBox(\n      200,\n      80,\n      60,\n      '0x9D9D9D',\n      'meshD5',\n      ''\n    );\n    boxD5.position.set(160,-20,150);\n    let boxD6 = getGeometryBox(\n      80,\n      80,\n      30,\n      '0x8D67B5',\n      'meshD6',\n      '接待前台'\n    );\n    boxD6.position.set(320,-20,150);\n    let boxD7 = getGeometryBox(\n      160,\n      80,\n      40,\n      '0xE6B3ED',\n      'meshD7',\n      '扶梯'\n    );\n    boxD7.position.set(160,-20,220);\n    let group = new Group();\n    group.position.set(-320,0,-320);\n    group.add(boxD1, boxD2, boxD3, boxD4, boxD5, boxD6, boxD7);\n    scene.add(group);\n  };\n  initPerson = () => {\n    let { scene, camera, renderer } = this;\n    let { personCurrentXY } = this.state;\n    let person = this.createPerson();\n    person.position.set(personCurrentXY.x,0,personCurrentXY.y);\n    let shapeCircle = new Shape([new Vector2(0, 0)]);\n    shapeCircle.absarc(0,0,30,0,Math.PI * 2,false);\n    let shapeMin = new Shape([new Vector2(0,0)]);\n    shapeMin.absarc(0,0,15,0,Math.PI * 2,false);\n    let geometryCircle = new ShapeGeometry( [shapeCircle,shapeMin] );\n    let materialCircle = new MeshBasicMaterial( {\n      color: 0xc1cadf\n    } );\n    let materialCircleMin = new MeshBasicMaterial({\n      color: '#788fce',\n      polygonOffset: true,\n      polygonOffsetFactor: -1\n    });\n    let meshCircle = new Mesh( geometryCircle, [materialCircle, materialCircleMin] ) ;\n    meshCircle.rotation.set(-Math.PI/2,0,0);\n    meshCircle.position.set(personCurrentXY.x,0,personCurrentXY.y);\n    scene.add( person, meshCircle );\n    renderer.render( scene, camera );\n  };\n  initControl = () => {\n    let { scene, camera, renderer } = this;\n    renderer.render(scene, camera);\n    requestAnimationFrame(this.initControl);\n  };\n  initPersonXY = () => {\n    let { match: { params: { position } } } = this.props;\n    let positionObj;\n    switch (position) {\n      case '0' :\n        positionObj = { };\n        break;\n      case '1' :\n        positionObj = { x:-160, y:-50 };\n        break;\n      default :\n        return;\n    }\n    this.setState({\n      personCurrentXY: positionObj\n    },() => {\n      this.init();\n      if( positionObj ) {\n        this.initPerson();\n      }\n    })\n  };\n  createSector = () => {\n    //左下角的扇形体\n    let shape = new Shape([new Vector2(0, 0)]);\n    shape.moveTo(50,-20);\n    shape.lineTo(50,0);\n    shape.absarc(0,0,50,0,Math.PI/2,false);\n    shape.lineTo(-30,50);\n    shape.lineTo(-30,-20);\n    let v1 = new Vector3(0, -60, 0);\n    let v2 = new Vector3(0, 20, 0);\n    let path = new LineCurve3(v1, v2);\n    let extrudeSettings = {\n      steps: 2,\n      // depth: 10,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1,\n      extrudePath: path\n    };\n    let geometry = new ExtrudeGeometry(shape, extrudeSettings);\n    let material = new MeshPhongMaterial({\n      color: 0x84B660,\n      // emissive:color,\n      // transparent: true,\n      // opacity: 0.8,\n    });\n    let mesh = new Mesh(geometry, material);\n    mesh.name = 'meshA4';\n    mesh.rotation.set(0,Math.PI/2,0);\n    let fontBox = getGeometryBox(\n      60,\n      20,\n      20,\n      '0x84B660',\n      '',\n      '呼叫中心'\n    );\n    fontBox.position.set(-10,10,10);\n    let group = new Group();\n    group.add( mesh, fontBox );\n    group.name = 'groupA4';\n    return group\n  };\n  createIrregularCube = (arr,name,color) => {\n    //绘制不规则多面体\n    let shape = new Shape([new Vector2(0, 0)]);\n    arr.forEach(item => {\n      shape.lineTo(item.x,item.y)\n    });\n    let v1 = new Vector3(0, 0, 0);\n    let v2 = new Vector3(0, 20, 0);\n    let path = new LineCurve3(v1, v2);\n    let extrudeSettings = {\n      steps: 1,\n      // depth: 10,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1,\n      extrudePath: path\n    };\n    let geometry = new ExtrudeGeometry(shape, extrudeSettings);\n    let material = new MeshPhongMaterial({\n      color: color,\n      transparent: true,\n      opacity: 1,\n    });\n    let mesh = new Mesh(geometry, material);\n    mesh.name = name;\n    return mesh;\n  };\n  createFloor = () => {\n    let { scene } = this;\n    let shape = new Shape([new Vector2(0, -250)]);\n    shape.moveTo(190,-400);\n    shape.quadraticCurveTo(200,-400,210,-390);\n    shape.lineTo(690, 90);\n    shape.quadraticCurveTo(700,100,700,110);\n    shape.lineTo(700,350);\n    shape.quadraticCurveTo(700,400,650,400);\n    shape.lineTo(-180,400);\n    shape.quadraticCurveTo(-200,400,-220,380);\n    shape.lineTo(-690,-90);\n    shape.quadraticCurveTo(-700,-100,-700,-110);\n    shape.lineTo(-700,-350);\n    shape.quadraticCurveTo(-700,-400,-650,-400);\n    // shape.lineTo(300, 0)\n    // shape.lineTo(0, 0);\n    // shape.lineTo(0, 400);\n    let v1 = new Vector3(0, -30, 0);\n    let v2 = new Vector3(0, 0, 0);\n\n    let path = new LineCurve3(v1, v2);\n    let extrudeSettings = {\n      steps: 2,\n      // depth: 10,\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1,\n      extrudePath: path\n    };\n    let geometry2 = new ExtrudeGeometry(shape, extrudeSettings);\n    let mesh2 = new Mesh(geometry2, new MeshLambertMaterial({\n      color: 0xe5e4e4,\n      transparent: true,\n      // opacity: .5,\n      polygonOffset: true,\n      polygonOffsetFactor: 0.01,\n    }));\n    mesh2.name = 'floor';\n    // mesh2.position.set(0,30,0);\n    mesh2.scale.set(.9,1,.9);\n    mesh2.rotation.set(0,-3 * Math.PI/4,0);\n    // let geometry = new BoxGeometry(1400, 0, 800);\n    // let material = new MeshBasicMaterial({\n    // \tcolor: 0x9eafbb,\n    // \topacity: 0.7,\n    // \ttransparent: true\n    // });\n    // let mesh = new Mesh(geometry, material);\n    scene.add(mesh2);\n  };\n  createPerson = () => {\n    // let { scene, camera, renderer } = this;\n    let points = [\n      new Vector2(0,0),//top left\n      new Vector2(6,0),//bottom left\n      new Vector2(3,2),//bottom left\n      new Vector2(6.4,15.8),//bottom left\n      new Vector2(3.4,19.4),\n      new Vector2(0,0)\n    ];\n    let geometry = new LatheGeometry( points );\n    let material = new MeshBasicMaterial( { color: 0x0000ff } );\n    let lathe = new Mesh( geometry, material );\n    let geometrySphere = new SphereGeometry(4);\n    let materialSphere = new MeshLambertMaterial({\n      color: 0x0000ff\n    });\n    let sphere = new Mesh( geometrySphere, materialSphere );\n    sphere.position.set(0,30,0);\n    let groupPerson = new Group();\n    groupPerson.add( lathe, sphere );\n    return groupPerson;\n  };\n  animationDown = (mesh) => {\n    let { scene, camera, renderer } = this;\n    let that = this;\n    let yHeight = 30;\n    function move() {\n      yHeight--;\n      if (yHeight > 0) {\n        mesh.position.y -= 1;\n        renderer.render(scene, camera);\n        that.animationDownId = requestAnimationFrame(move);\n      }\n    }\n    move();\n  };\n  animationUp = (mesh) => {\n    let { scene, camera, renderer } = this;\n    let that = this;\n    let yHeight = 0;\n    function move() {\n      yHeight++;\n      if (yHeight < 30) {\n        mesh.position.y += 1;\n        renderer.render(scene, camera);\n        that.animationUpId = requestAnimationFrame(move);\n      } else {\n        let { match: { params: { position } } } = that.props;\n        if(position === '0') return;\n        //建筑物升起后，小人移动\n        let { currentCurve } = that.state;\n        that.animatePerson(currentCurve);\n      }\n    }\n    move();\n  };\n  animatePerson = (currentCurve) => {\n    let { scene, camera, renderer } = this;\n    // let { currentCurve } = this.state;\n    //判断当前是否存在小人，如存在移除\n    let currentPerson = scene.getObjectByName('currentPerson');\n    if(currentPerson) {\n      scene.remove(currentPerson)\n    }\n    //判断当前是否存在路径线，如存在移除\n    let currentLine = scene.getObjectByName('currentLine');\n    if(currentLine) {\n      scene.remove(currentLine)\n    }\n    // renderer.clear();\n    let that = this;\n    renderer.autoClear = true;\n    //曲线\n    // let curve = new CatmullRomCurve3(\n    //   [\n    //     new Vector3(350, 0, -20),\n    //     new Vector3(320, 0, -20),\n    //     new Vector3(230, 0, 70),\n    //     new Vector3(200, 0, 70),\n    //     new Vector3(-230, 0, 70),\n    //     new Vector3(-190, 0, -70),\n    //     // new Vector3(-190, 0, -50)\n    //   ],\n    //   false\n    // );\n\n    if(!currentCurve) return;\n\n\n    let points = currentCurve.getPoints(50);\n    let geometry = new BufferGeometry().setFromPoints( points );\n    let material = new LineDashedMaterial( {\n      color: 0x0000ff,\n      dashSize: 12,\n      gapSize: 7,\n      linewidth: 10\n    } );\n    let line = new Line(geometry, material);\n    line.name = 'currentLine';\n    line.computeLineDistances();\n    line.rotation.set(Math.PI/2,0,0);\n\n\n    // let geometry = new TubeGeometry(curve, 100, 0.6, 50, false);\n    // let material = new LineDashedMaterial({\n    //   color: 0xff0000,\n    //   dashSize: 10,\n    //   gapSize: 3\n    // });\n    // let line = new Line(geometry, material);\n    // line.computeLineDistances();\n\n\n\n    scene.add(line);\n    // console.log(geometry);\n    //小人\n    let person = this.createPerson();\n    person.name = 'currentPerson';\n    scene.add(person);\n    renderer.render(scene, camera);\n    // if(curve) {\n    //   let pointArr = curve.getPoints(10);\n    //   pointArr.forEach(item => {\n    //     person.position.set(item.x,item.y,item.z);\n    //     // renderer.autoClear = true;\n    //     renderer.render(scene, camera);\n    //     // renderer.clear();\n    //   })\n    // }\n    let progress = 0;\n    function animate() {\n      // if (that.timer) {\n      //   clearTimeout(that.timer);\n      //   that.timer = null;\n      // }\n      progress += 0.006*(600/currentCurve.getLength());\n      if (currentCurve) {\n        let point = currentCurve.getPointAt(progress);\n        if (point) {\n          person.position.set(point.x, 0, point.y);\n          renderer.render(scene, camera);\n        }\n      }\n      that.animationPersonId = requestAnimationFrame(animate);\n    }\n    animate();\n  };\n\n  getPath = (index) => {\n\n    let { scene } = this;\n    let { currentPositionPaths } = this.state;\n    let pathPoint;\n    let meshName;\n    switch (index) {\n      case 0 :\n        pathPoint = currentPositionPaths.pathPoint0;\n        meshName = 'meshD6';\n        break;\n      case 1 :\n        pathPoint = currentPositionPaths.pathPoint1;\n        meshName = 'meshD2';\n        break;\n      case 2 :\n        pathPoint = currentPositionPaths.pathPoint2;\n        meshName = 'meshC6';\n        break;\n      case 3 :\n        pathPoint = currentPositionPaths.pathPoint3;\n        meshName = 'meshC7';\n        break;\n      case 4 :\n        pathPoint = currentPositionPaths.pathPoint4;\n        meshName = 'meshC2';\n        break;\n      case 5 :\n        pathPoint = currentPositionPaths.pathPoint5;\n        meshName = 'meshC1';\n        break;\n      case 6 :\n        pathPoint = currentPositionPaths.pathPoint6;\n        meshName = 'meshD4';\n        break;\n      case 7 :\n        pathPoint = currentPositionPaths.pathPoint7;\n        meshName = 'meshA8';\n        break;\n      case 8 :\n        pathPoint = currentPositionPaths.pathPoint8;\n        meshName = 'groupA4';\n        break;\n      case 9 :\n        pathPoint = currentPositionPaths.pathPoint9;\n        meshName = 'liftGroup';\n        break;\n      case 10 :\n        pathPoint = currentPositionPaths.pathPoint10;\n        meshName = 'toiletGroup';\n        break;\n      case 11 :\n        pathPoint = currentPositionPaths.pathPoint11;\n        meshName = 'meshA1';\n        break;\n      case 12 :\n        pathPoint = currentPositionPaths.pathPoint12;\n        meshName = 'meshC4';\n        break;\n      case 13 :\n        pathPoint = currentPositionPaths.pathPoint9;\n        meshName = 'meshA5';\n        break;\n      case 14 :\n        pathPoint = currentPositionPaths.pathPoint10;\n        meshName = 'meshA2';\n        break;\n      default :\n        return;\n    }\n    if(prevMesh) {\n      this.animationDown(prevMesh)\n    }\n    currentMesh = scene.getObjectByName(meshName);\n    this.animationUp(currentMesh);\n    prevMesh = currentMesh;\n\n    let curve = new Path();\n    pathPoint.forEach((item, index) => {\n      index ? curve.lineTo(item.x,item.y) : curve.moveTo(item.x, item.y)\n    });\n\n    //保存当前的路径形状\n    this.setState({\n      currentCurve: curve\n    })\n  };\n  getCurrentPositionPaths = () => {\n    this.setState({\n      currentPositionPaths:pathArray[0]\n    })\n  };\n  componentDidMount() {\n    this.initPersonXY();\n    this.getCurrentPositionPaths();\n    this.three.appendChild(this.renderer.domElement);\n  }\n  addClickEvent = () => {\n    let { scene } = this;\n    cubeArray.forEach(item => {\n      let cube = scene.getObjectByName(item.name);\n      cube.on('click',(ev) => {\n        if(item.isNav) {\n          this.changeNav(item.pathIndex, item.title);\n        } else {\n          this.getPath(item.pathIndex);\n        }\n      });\n      cube.cursor = 'pointer';\n    })\n  };\n  changeNav = (pathIndex, title) => {\n    this.clearAnimationFrame();\n    this.setState({\n      currentNav: pathIndex,\n      title,\n      currentFastNav: null,\n      isShowTips: false\n    });\n    this.getPath(pathIndex);\n  };\n  changeFastNav = (pathIndex) => {\n    let { match: { params: { position } } } = this.props;\n    this.setState({\n      currentFastNav: pathIndex,\n      currentNav: null\n    });\n    this.getPath(pathIndex);\n    if((pathIndex === 9 || pathIndex === 10) && position !== '0') {\n      this.setState({\n        isShowTips: true\n      })\n    } else {\n      this.setState({\n        isShowTips: false\n      })\n    }\n  };\n  routerNav = (item) => {\n    let { location: { search } } = this.props;\n    let floorName = search.split('=')[1];\n    let position = floorName === item.name ? 1 : 0;\n\n    this.clearAnimationFrame();\n\n    this.props.history.push(`${item.path}/${position}?floor-name=${floorName}`);\n  };\n  componentWillUnmount() {\n    this.interaction.removeEvents();\n    this.renderer = null;\n    this.clearAnimationFrame();\n  }\n\n  clearAnimationFrame = () => {\n    cancelAnimationFrame(this.animationUpId);\n    cancelAnimationFrame(this.animationDownId);\n    cancelAnimationFrame(this.animationPersonId);\n  };\n  render() {\n    let { currentIndex, currentNav, title, currentFastNav, isShowTips } = this.state;\n    return (\n      <div className={'floor-three'}>\n        <div className=\"main-left\">\n          <div\n            className=\"canvas\"\n            style={{ textAlign: 'center' }}\n            ref={(el) => (this.three = el)}\n          >\n            <div className=\"detail\">\n              {/* <h3>{ title }</h3>\n              <div className=\"window-information\">\n                <div className=\"left\">\n                  <div className=\"window-count\">\n                    <span>窗口数: 9</span>\n                    <span>排队数: 21</span>\n                  </div>\n                  <div className=\"delay-time\">\n                    <span>预计等待时间: 2小时20分钟</span>\n                  </div>\n                </div>\n              </div> */}\n              <div className=\"window-item\">\n                <h4>常办事项:</h4>\n                <div className=\"window-item-detail\">\n                  <span> 公安(户政/出入境)服务、</span>\n                  <span> 企业设立、变更、注销、</span>\n                  <span> 供水、</span>\n                  <span> 供电、</span>\n                  <span> 燃气、</span>\n                  <span> 通信市政公用服务包装及验收</span>\n                </div>\n              </div>\n            </div>\n            {\n              isShowTips ?\n                <div className=\"tips\">\n                  共找到2个目标，已为您导航至最近的目标\n                </div>\n                :\n                ''\n            }\n          </div>\n          <div className=\"footer\">\n            <ul className=\"left-floor-num\">\n              {\n                [\n                  { name: '1F', path: '/floor-one' },\n                  { name: '2F', path: '/floor-two' },\n                  { name: '3F', path: '/floor-three' }\n                ].map((item,index) => {\n                  return (\n                    <li\n                      key={index}\n                      onClick={() => {this.routerNav(item)}}\n                      className={index === currentIndex ? 'active' : ''}\n                    >\n                      {item.name}\n                    </li>\n                  )\n                })\n              }\n            </ul>\n            <div className=\"fast-nav\">\n              <div\n                className={currentFastNav === 9 ? 'active' : ''}\n                onClick={() => {this.changeFastNav(9)}}>\n                <LiftIcon/>\n                <span>电梯间</span>\n              </div>\n              <div\n                className={currentFastNav === 10 ? 'active' : ''}\n                onClick={() => {this.changeFastNav(10)}}>\n                <ToiletIcon/>\n                <span>卫生间</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"right-nav\">\n          <div className=\"info\">\n            <DateBox floor={3}/>\n          </div>\n          <h3>你想要去哪儿?</h3>\n          <div className=\"nav-container\">\n            <ul className=\"wrap\">\n              {\n                cubeArray.map((item,index) => {\n                  return (\n                    item.isNav ? <li\n                      key={index}\n                      className={(index === currentNav ? 'active' : '')}\n                      onClick={() => { this.changeNav(item.pathIndex,item.title) }}\n                    >\n                      <span className={index === currentNav - 1 ? 'no-border' : ''}>\n                        {item.title}\n                      </span>\n                    </li> : ''\n                  )\n                })\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FloorThree;\n","let pathArray = [\n  {\n    pathPoint0: [\n      {x: -160,y: -50},\n      {x: -70,y: -50},\n      {x: 0,y: -140},\n    ],\n    pathPoint1: [\n      {x: -160,y: -50},\n      {x: -50,y: -50},\n      {x: -50,y: -220},\n      {x: -100,y: -220},\n    ],\n    pathPoint2: [\n      {x: -160,y: -50},\n      {x: -50,y: -50},\n      {x: 100,y: -110},\n      {x: 190,y: -110},\n    ],\n    pathPoint3: [\n      {x: -160,y: -50},\n      {x: 110,y: 40},\n    ],\n    pathPoint4: [\n      {x: -160,y: -50},\n      {x: 110,y: 40},\n      {x: 350,y: 280},\n    ],\n    pathPoint5: [\n      {x: -160,y: -50},\n      {x: 110,y: 40},\n      {x: 250,y: 180},\n      {x: 300,y: 130},\n    ],\n    pathPoint6: [\n      {x: -160,y: -50},\n      {x: -260,y: -50},\n      {x: -320,y: -130},\n    ],\n    pathPoint7: [\n      {x: -160,y: -50},\n      {x: -260,y: -30},\n    ],\n    pathPoint8: [\n      {x: -160,y: -50},\n      {x: -330,y: -100},\n      {x: -465,y: -235},\n      {x: -565,y: -135},\n    ],\n    pathPoint9: [\n      {x: -160,y: -50},\n      {x: -140,y: 90},\n    ],\n    pathPoint10: [\n      {x: -160,y: -50},\n      {x: -330,y: -100},\n      {x: -465,y: -235},\n    ],\n    pathPoint11: [\n      {x: -160,y: -50},\n      {x: -330,y: -100},\n      {x: -400,y: -170},\n      {x: -420,y: -290},\n    ],\n    pathPoint12: [\n      {x: -160,y: -50},\n      {x: -50,y: -50},\n      {x: 100,y: -110},\n      {x: 190,y: -110},\n      {x: 480,y: 180},\n    ]\n  }\n];\nexport default pathArray;\n","import React from 'react';\nimport { Icon } from 'antd';\nconst LiftSvg = () => {\n  return (\n    <svg t=\"1561427307417\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"3669\" width=\"2em\" height=\"2em\">\n      <path\n        d=\"M524.461822 379.39282c22.960862 0 41.565331-17.403369 41.565331-38.873356 0-21.467941-18.605492-38.858006-41.565331-38.858006-22.945512 0-40.393597 17.389042-40.393597 38.858006C484.068225 361.989451 501.51631 379.39282 524.461822 379.39282zM192.214455 938.541653l88.888018 0L281.102474 79.319533l-88.888018 0L192.214455 938.541653zM503.324566 212.6901l29.614671 0L532.939238 103.854323l59.245716 41.172725L592.184954 115.920126l-74.044354-51.458999-74.045377 51.458999 0 29.106922 59.230366-41.172725L503.32559 212.6901zM325.547506 775.585257l385.184142 0L710.731648 242.274906 325.547506 242.274906 325.547506 775.585257zM355.177528 271.90269l325.925122 0 0 474.05376L355.177528 745.95645 355.177528 271.90269zM755.175657 79.319533l0 859.222119 88.889042 0L844.064699 79.319533 755.175657 79.319533zM578.411712 392.268058 453.093523 392.268058c0 0-18.2289-2.155083-23.928949 12.96222l0 117.254517c0 0 0.49223 12.006452 13.165374 12.006452 0 0 14.105831 0.072655 14.105831-12.672624l0-70.917166c0 0 7.826566-16.131399 13.671931 0.810459l0.071634 251.465219c0 0-0.491207 12.890588 13.179701 12.890588l14.163138 0.202615c0 0 13.383347-0.146333 13.383347-13.093203L510.905529 586.459852c0 0 0.506557-6.611581 7.623944-6.611581 0 0 6.264937 2.357697 6.264937 6.885827l0 117.529787c0 0 0 11.805884 13.670908 11.805884l13.744589 0c0 0 13.671931-0.809435 13.671931-11.805884L565.881837 450.700889c0 0 4.919234-14.973016 13.671931-0.202615l0.448226 71.843258c0 0-3.182613 12.428054 14.092527 12.428054 12.991404 0 12.587182-11.877515 12.587182-11.877515l0.144292-117.659747C606.824972 405.230278 600.069852 392.268058 578.411712 392.268058zM532.939238 805.170063l-29.614671 0 0 108.834754-59.230366-41.172725 0 29.107945 74.045377 51.457975 74.044354-51.457975 0-29.107945-59.245716 41.172725L532.938214 805.170063z\"\n        fill=\"currentColor\" p-id=\"3670\" />\n    </svg>\n  )\n};\nconst ToiletSvg = () => {\n  return (\n    <svg t=\"1561427147713\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"3550\" width=\"2em\" height=\"2em\">\n      <path\n        d=\"M233.44 286.41a80.21 80.21 0 1 1 80.2-80.21 80.3 80.3 0 0 1-80.2 80.21z m0-110.42a30.21 30.21 0 1 0 30.2 30.21 30.25 30.25 0 0 0-30.2-30.2zM300.05 604.13H157.37a36.4 36.4 0 0 1-36.3-34.4L92.65 338.56V337A36.39 36.39 0 0 1 129 300.68h208.87A36.39 36.39 0 0 1 374.22 337v2L336.3 570.37a36.39 36.39 0 0 1-36.25 33.76z m-130.52-50H288.3l33.35-203.45H144.52z\"\n        fill=\"currentColor\" p-id=\"3551\" />\n      <path\n        d=\"M261.44 828.4h-56a37.05 37.05 0 0 1-37-36.24L157.21 556.4h152.45l-11.22 235.76a37.05 37.05 0 0 1-37 36.24z m-43.6-50H249l8.19-172h-47.54zM494.56 939.55a25 25 0 0 1-25-25V116.47a25 25 0 1 1 50 0v798.08a25 25 0 0 1-25 25zM763.32 286.41a80.21 80.21 0 1 1 80.21-80.21 80.3 80.3 0 0 1-80.21 80.21z m0-110.42a30.21 30.21 0 1 0 30.21 30.21 30.25 30.25 0 0 0-30.21-30.2zM788.37 822.22h-50.1c-19.74 0-34.77-12.38-35.69-29.05l-11.34-125.64H835.4l-11.35 125.64c-0.91 16.67-15.95 29.05-35.68 29.05z m-37.48-50h24.85l4.94-54.69H746z\"\n        fill=\"currentColor\" p-id=\"3552\" />\n      <path\n        d=\"M876 711.34H650.64c-20.4 0-37-16.09-37-35.88v-2.16l60.11-345c1.48-18.48 17.46-33.08 36.89-33.08H816c19.43 0 35.41 14.6 36.89 33.08l60.11 345v2.16c0 19.79-16.61 35.88-37 35.88z m-209.51-50h193.67l-55.08-316.12h-83.52z\"\n        fill=\"currentColor\" p-id=\"3553\" />\n    </svg>\n  )\n};\nconst  NurserySvg = () => {\n  return (\n    <svg t=\"1561426601150\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"3432\" width=\"2em\" height=\"2em\">\n      <path\n        d=\"M941.056 868.352c45.568 0 82.944-37.376 82.944-83.456s-37.376-83.456-82.944-83.456c-46.08 0-83.456 37.376-83.456 83.456 0 46.592 37.376 83.456 83.456 83.456zM431.616 946.176h586.752v69.12H431.616zM765.952 640v118.784h-154.624l16.896-22.016 1.024-1.024 6.144-8.192 0.512-0.512 1.536-4.608c3.584-11.264 1.024-24.064-8.192-33.28l-102.912-102.4c-13.312-12.8-33.792-12.8-47.104 0-12.8 12.8-12.8 33.792 0 47.104l75.264 74.24L479.232 778.24s-35.328 53.248 26.112 94.72h274.944s51.2 3.072 52.224-73.216v-1.024l0.512-4.608V640c0-18.432-14.848-33.28-33.28-33.28-19.456 0-33.792 14.848-33.792 33.28zM617.984 118.272l4.096 11.264 5.632 10.752 7.68 9.216 8.704 8.704 9.728 7.168 10.752 6.144 10.752 3.584 12.8 3.072h23.04l12.288-3.072 11.264-4.096 10.752-6.144 9.728-7.168 8.192-8.704 7.168-9.728 5.632-10.752 4.608-11.264 2.048-11.776 1.024-12.288-1.024-11.264-2.56-12.8-4.096-10.752-6.144-10.752-7.168-9.728-8.192-8.192-10.24-7.68-10.752-5.632-11.264-4.608-11.776-2.048-12.288-1.024-11.776 1.024-12.288 2.56-10.752 4.608-10.752 5.632-9.728 7.68-8.704 8.704-7.168 9.728-5.632 10.752-3.584 10.752-2.56 12.288-0.512 12.288 0.512 11.776z\"\n        fill=\"currentColor\" p-id=\"3433\" />\n      <path\n        d=\"M315.904 432.64l42.496-22.016 154.112-80.384 1.024 128.512 5.632 7.168 52.736 58.88 72.704 80.384 7.168 5.632 7.68 4.096 7.68 2.56 9.216 0.512 7.68-0.512 8.704-3.072 7.168-3.584 7.168-6.656 5.12-6.656 4.096-6.656 1.536-7.68 1.024-9.728-3.584-16.384-4.096-7.68-17.92-20.992-92.16-102.4-0.512-4.608V222.72l-2.048-20.992-5.12-18.944-9.216-17.92-14.336-16.896-12.8-10.752-13.824-8.192-14.848-6.656-15.36-4.096-15.36-1.024-15.872 0.512-14.336 3.584-25.6 11.776-238.592 125.952-88.064 42.496c-36.352 18.432-45.568 69.632-45.568 70.144L0 706.56h145.408v257.536c0 33.28 23.552 45.056 43.008 45.056 19.968 0 43.008-11.776 43.008-45.056V706.56h140.288L315.904 432.64z\"\n        fill=\"currentColor\" p-id=\"3434\" />\n    </svg>\n  )\n};\nexport const LiftIcon = props => <Icon component={ LiftSvg } {...props} />;\nexport const ToiletIcon = props => <Icon component={ ToiletSvg } {...props}/>;\nexport const NurseryIcon = props => <Icon component={ NurserySvg } {...props}/>;\n","import { BoxGeometry, CanvasTexture, LinearFilter, Mesh, MeshPhongMaterial } from \"three\";\n\n/**\n * 返回一个canvas文字图\n * @param width 宽度\n * @param height 高度\n * @param text 文字\n * @param color 背景色\n * @param fontSize 文字大小\n * @param fontColor 文字颜色\n * @param rotateDirection 文字旋转\n *        normal - 不旋转 right - 顺时针旋转90 left - 逆时针旋转90\n * @returns {HTMLElement}\n */\nfunction getTextCanvas(width, height, text, color, fontSize, fontColor,rotateDirection){\n  let canvas = document.createElement('canvas');\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = width + 'px';\n  canvas.style.height = height + 'px';\n  let ctx = canvas.getContext('2d');\n  ctx.translate(width,height);\n  ctx.fillStyle = color.replace(/0x/,'#');\n  ctx.fillRect(-width, -height, width * 2, height * 2);\n  ctx.font = (fontSize || '30px') + ' bold';\n  ctx.fillStyle = fontColor || '#FFFFFF';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  if(rotateDirection) {\n    let angel;\n    switch (rotateDirection) {\n      case 'right' :\n        angel = Math.PI/2;\n        break;\n      case 'left' :\n        angel = -Math.PI/2;\n        break;\n      case 'normal' :\n        angel = 0;\n        break;\n      default:\n        break;\n    }\n    ctx.rotate(angel);\n  } else if(width < height) {\n    ctx.rotate(Math.PI/2);\n  }\n  ctx.fillText(text, 0, 0);\n  return canvas;\n}\n\n/**\n * 返回一个立方体mesh\n * @param width 宽度\n * @param height 高度\n * @param depth 深度\n * @param color 材质颜色\n * @param name mesh的名字\n * @param canvasText 立方体表面文字\n * @param opacity 透明度\n * @param fontSize 立方体表面文字尺寸\n * @param fontColor 立方体表面文字颜色\n * @param canvasRotationDirection 文字旋转\n *        normal - 不旋转 right - 顺时针旋转90 left - 逆时针旋转90\n * @returns {Mesh}\n */\nfunction getGeometryBox(\n  width,\n  height,\n  depth,\n  color,\n  name,\n  canvasText,\n  opacity,\n  fontSize,\n  fontColor,\n  canvasRotationDirection\n) {\n  let geometry = new BoxGeometry(width, height, depth);\n  let canvas = getTextCanvas(width, depth, canvasText, color, fontSize, fontColor, canvasRotationDirection);\n  let texture = new CanvasTexture(canvas);\n  texture.minFilter = LinearFilter;\n  let material = new MeshPhongMaterial({\n    //材质的颜色会与贴图的颜色叠加,只设置贴图颜色即可\n    // color: color.replace(/0x/,'#'),\n    // emissive:color,\n    transparent: true,\n    opacity: opacity || 1,\n    map: texture,\n    polygonOffset: true,\n    polygonOffsetFactor: -1,\n    polygonOffsetUnits: 1\n  });\n\n  let materialColor = new MeshPhongMaterial({\n    color: color.replace(/0x/, \"#\"),\n    transparent: true,\n    opacity: opacity || 1\n  });\n\n  let materialArr = [\n    materialColor,\n    materialColor,\n    material,\n    materialColor,\n    materialColor,\n    materialColor\n  ];\n  /*geometry.faceVertexUvs[0].map((item,index) => {\n    item = [\n      new Vector2(0, 0),\n      new Vector2(0, 0),\n      new Vector2(0, 0)\n    ]\n  });\n  // geometry.faceVertexUvs[0] = [];\n  geometry.faceVertexUvs[0][4] = [\n    new Vector2(0, 1),\n    new Vector2(0, 0),\n    new Vector2(1, 1)\n  ];\n  geometry.faceVertexUvs[0][5] = [\n    new Vector2(0, 0),\n    new Vector2(1, 0),\n    new Vector2(1, 1)\n  ];*/\n  let mesh = new Mesh(geometry, materialArr);\n  //设置模型的每个部位都可以投影\n  mesh.castShadow = true;\n  mesh.receiveShadow = true;\n  mesh.name = name;\n  return mesh;\n}\n\nexport { getTextCanvas, getGeometryBox }\n","/**\n * @return {string}\n */\nfunction FormatDateTime(timeStamp,type){\n  let weekDay = ['周日','周一','周二','周三','周四','周五','周六'];\n  let date = new Date();\n  date.setTime(timeStamp);\n  let y = date.getFullYear();\n  let m = date.getMonth() + 1;\n  m = m < 10 ? ('0' + m) : m;\n  let d = date.getDate();\n  d = d < 10 ? ('0' + d) : d;\n  let h = date.getHours();\n  h = h < 10 ? ('0' + h) : h;\n  let minute = date.getMinutes();\n  let second = date.getSeconds();\n  minute = minute < 10 ? ('0' + minute) : minute;\n  second = second < 10 ? ('0' + second) : second;\n  let week = date.getDay();\n  let result;\n  switch (type) {\n    case 1 :\n      result =  y + '年' + m + '月' + d + '日' ;\n      break;\n    case 2 :\n      result = `${h}:${minute}`;\n      break;\n    case 3 :\n      result = weekDay[week];\n      break;\n    case 4 :\n      result = y + '-' + m + '-' + d+'  '+h+':'+minute+':'+second;\n      break;\n    default :\n      return '';\n  }\n  return result;\n}\nexport default FormatDateTime;\n","import React, { Component } from 'react';\nimport FormatDateTime from \"../../utils/formateDatetime\";\nimport './DateBox.less';\nclass DateBox extends Component {\n  state = {\n    dateTime: Date.now()\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({\n        dateTime: Date.now()\n      })\n    },1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    let { floor } = this.props;\n    let { dateTime } = this.state;\n    return (\n      <div className=\"date-box\">\n        <div className=\"date\">\n          <span>{FormatDateTime(dateTime,1)}</span>\n          <span>{FormatDateTime(dateTime,3)}</span>\n        </div>\n        <div className=\"time\">\n          {FormatDateTime(dateTime,2)}\n        </div>\n        <div className=\"floor-info\">\n          当前所在: {floor} 层\n        </div>\n      </div>\n    )\n  }\n}\nexport default DateBox;\n"],"sourceRoot":""}